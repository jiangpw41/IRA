[
    "LOOKUP ON player WHERE player.age >= 29.5 YIELD id(vertex) as name, player.age AS Age",
    "MATCH (:player{name: \"Tim Duncan\"})-[e:like*2..3]->(v)\nRETURN e, v",
    "MATCH (n:disease)-[e:has_symptom]->(n1:symptom) WHERE n.disease.name=='房室管畸形' return n1.symptom.name",
    "MATCH (n:disease{name:\"遗传性耳瘘\"}) return n.disease.prevent",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "GO FROM 'Tim Duncan' OVER like bidirect WHERE like.likeness > 90\nYIELD $^.player.name, like._dst, $$.player.name, like.likeness",
    "GO FROM \"心脏病\" OVER recommend_drug YIELD dst(edge);",
    "MATCH (v:player) WITH (v)-[:teammate]->() AS p RETURN p",
    "MATCH (n:character{name:'尼古拉·瓦西勒娃'}) return n.character.gender",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst |\nFIND SHORTEST PATH FROM $-.src TO $-.dst OVER like UPTO 5 STEPS YIELD path as p |\nORDER BY $-.p | LIMIT 10",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:like{likeness: 90}]->(v)\nRETURN e, v",
    "$var = GO FROM \"Tracy McGrady\" OVER like YIELD like._dst as id; GO FROM $var.id OVER like YIELD like._dst",
    "YIELD \"Yao Ming\" AS src, \"Tony Parker\" AS dst\n| FIND SHORTEST PATH FROM $-.src TO $-.dst OVER like, serve UPTO 5 STEPS YIELD path as p",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:like{likeness: 90}]->(v)\nRETURN e, v",
    "MATCH (:player{name:\"Kyrie Irving\"})-[e:like*2..3]->()\nRETURN *",
    "MATCH (n:character{name:'哈维·瑞吉比特'})-[e:belong_to]-(n1:group) return n1",
    "LOOKUP ON character WHERE character.name=='马格纳斯·麦克唐纳' YIELD properties(vertex).born AS born",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "GO FROM \"Manu Ginobili\" OVER * REVERSELY YIELD like.likeness, teammate.start_year, serve.start_year, $$.player.name",
    "INSERT EDGE like(likeness) VALUES \"Tim Duncan\"->\"Tim Parker\":(99);\nINSERT EDGE like(likeness) VALUES \"Tim Parker\"->\"Tony Parker\":(90);",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE like.likeness > 90\nYIELD like.likeness, teammate.start_year, $$.player.name",
    "GO 2 STEPS FROM \"希思科特·巴巴里\" OVER Kindred YIELD dst(edge)",
    "GO 0 TO 2 STEPS FROM 'Tony Parker' OVER like BIDIRECT YIELD DISTINCT like._dst",
    "match (v:player) return properties(v).name AS name order by name limit 2;",
    "GO FROM \"戊型病毒性肝炎\" OVER recommend_drug YIELD dst(edge);",
    "match (v:player) return v.player.name, v",
    "MATCH (v1:player{name: \"LeBron James\"}) -[r:serve]-> (v2:team{name: \"Cavaliers\"})\nRETURN type(r) AS Type, v2.team.name AS Name",
    "MATCH (n:disease{name:\"无排卵性不孕症\"}) return n.disease.easy_get",
    "MATCH (:player{name:\"Kyrie Irving\"})-[e:serve|like*2..3]-(v)\nRETURN count(v)",
    "MATCH (v:player {name: \"DeAndre Jordan\"}) RETURN v",
    "MATCH (v1) -[:like]-> (v2) -[:like]-> (v3)\nWHERE id(v1) == \"Tim Duncan\"\nRETURN v1.player.name AS Player, v2.player.name AS Friend, v3.player.name AS FoF",
    "GET SUBGRAPH 1 STEPS FROM \"头痛\" YIELD VERTICES AS nodes, EDGES AS all_edges",
    "MATCH (n:disease)-[]->(n1:cure{name:'康复治疗'}) return count(n)",
    "MATCH (n:character)-[e]-(n1:group{name:'多洛霍夫家族'}) return n",
    "MATCH (v1) -[:like]-> (v2) -[:like]-> (v3)\nWHERE id(v1) == \"Tim Duncan\"\nRETURN v1.player.name AS Player, v2.player.name AS Friend, v3.player.name AS FoF",
    "FETCH PROP ON player 'Boris Diaw' YIELD vertex as node",
    "MATCH (v:player) WITH (v)-[:teammate]->() AS p RETURN p",
    "MATCH (v:player {name: \"DeAndre Jordan\"}) RETURN v",
    "MATCH (n:character{name:'马琳·麦金农'}) return n.character.species",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Tony Parker\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "GET SUBGRAPH 2 STEPS FROM \"Tim Duncan\" BOTH like YIELD edges as e\n| UNWIND $-.e as a | YIELD $-.a AS a",
    "$a = GO FROM 'Danny Green' OVER like YIELD like._src AS src, like._dst AS dst;\nGO FROM $a.dst OVER teammate YIELD $a.src AS src, $a.dst, teammate._dst AS dst",
    "MATCH (n:character{name:'多洛雷斯·乌姆里奇'})-[e:learn_from]-(n1:college) return n1.college.name",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "GO FROM \"Tracy McGrady\" OVER like YIELD like._dst",
    "MATCH (n:disease{name:\"复发性线性棘层松解性皮肤病\"}) return n.disease.easy_get",
    "GO FROM 'Tim Duncan' OVER like bidirect WHERE like.likeness > 90\nYIELD $^.player.name, like._dst, $$.player.name, like.likeness",
    "GO FROM 'Boris Diaw' OVER serve WHERE $$.team.name CONTAINS \"Haw\"\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "LOOKUP ON player WHERE player.age >= 29 YIELD id(vertex) as name, player.age AS Age",
    "MATCH p = (v:player{name: \"Cory Joseph\"})-[e:like]-(v2)\nRETURN p",
    "MATCH (v:player)-[e:like]->(v2)\nWHERE id(v) == \"Tim Duncan\"\nRETURN DISTINCT properties(e) as props, e",
    "MATCH (:player{name:\"Tim Duncan\"})-[e:like*2..3]->()\nRETURN *",
    "MATCH (n:character{name:'蒙太·奈特利'}) return n.character.species",
    "LOOKUP ON player\nWHERE player.name == 'Tim Duncan'\nYIELD player.age as age, id(vertex) as vid\n| UNWIND $-.vid as a | YIELD $-.a AS a",
    "GO FROM \"Boris Diaw\" OVER serve YIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "GET SUBGRAPH 2 STEPS FROM \"尼可·勒梅\" YIELD VERTICES AS nodes, EDGES AS relationships;",
    "MATCH (v)-[:serve]->(t)\nWHERE id(t) == 'Pistons'\nRETURN v.player.name AS Name",
    "MATCH (v1:player{name: \"LeBron James\"}) -[r:serve]-> (v2:team{name: \"Cavaliers\"})\nRETURN type(r) AS Type, v2.team.name AS Name",
    "MATCH (p1)-[:teammate]->(p2)\nRETURN p1.player.name, p2.player.name",
    "GO FROM \"丙型肝炎病毒感染与肾小球肾炎\" OVER cure_department YIELD dst(edge);",
    "MATCH (n:character{name:'埃尔德·沃普尔'})-[e]-(n1:group) return count(n1)",
    "MATCH (v:player {name: \"DeAndre Jordan\"}) RETURN v",
    "GO FROM \"LaMarcus Aldridge\" OVER * YIELD $$.team.name, $$.player.name",
    "MATCH p = (v:player{name: \"Cory Joseph\"})-[e:like]-(v2)\nRETURN p",
    "MATCH (n:character{name:'弗雷德·韦斯莱'})-[e]-(n1:character{name:'乔治·韦斯莱'}) return n1",
    "GO FROM \"LaMarcus Aldridge\" OVER * YIELD $$.team.name, $$.player.name",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v2) == 'Tim Duncan'\nRETURN COUNT(*)",
    "MATCH (n:character{name:'安东宁·多洛霍夫'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (v)-[:serve]->(t)\nWHERE (NOT NOT id(v) == 'Paul Gasol') AND id(v) == 'Paul Gasol'\nRETURN v.player.name AS Name, t.team.name AS Team",
    "MATCH (n:disease)-[]->(n1:drug{name:'伤痛宁膏'}) return n.disease.name",
    "GO FROM \"Tony Parker\" OVER like YIELD like._dst",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Tony Parker\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "MATCH (v1) -[:like]-> (v)\nWHERE id(v1) == 'Dejounte Murray'\nRETURN v.player.name AS Name, v.player.age AS Age\nORDER BY Age DESC, Name ASC\nSKIP 11\nLIMIT 3",
    "LOOKUP ON character WHERE character.name=='巴希达·巴沙特' YIELD properties(vertex).eye AS eye",
    "MATCH (n:disease{name:\"糖尿病\"}) return n.disease.cure_lasttime",
    "GO FROM \"Boris Diaw\" OVER like YIELD like._dst",
    "match (v:player)-[e:like{likeness:-1}]->()  RETURN e",
    "MATCH p = ()-[:like*2]->(v:player) WHERE id(v) == 'Grant Hill' RETURN p",
    "MATCH (v:player)-[e:like]->(v2) WHERE none_direct_dst(e) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *\nMINUS\nMATCH (v:player)-[e:like]->(v2) WHERE id(v2) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *",
    "MATCH (v)\nWHERE id(v) == 'Tim Duncan'\nRETURN v.player.name AS Name",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Nobody\",\"Spur\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "MATCH (n:character{name:'厄克特'})-[]-(n1) return n1.group.name",
    "MATCH(n:player)-[:like]->(m)\n  WHERE n.player.age > 35\n  RETURN DISTINCT id(n) AS id,\n                  count(n) AS count,\n                  sum(floor(n.player.age)) AS sum,\n                  max(m.player.age) AS max,\n                  min(n.player.age) AS min,\n                  avg(distinct n.player.age)+1 AS age,\n                  labels(m) AS lb\n        ORDER BY id, count, max, min\n        SKIP 10 LIMIT 20;",
    "GO FROM \"Boris Diaw\" OVER serve YIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH (n:character{name:'莫迪丝蒂·巴瑞波恩'})-[e:kindred{rel_type:'父亲'}]-(n1) return n1.character.species",
    "MATCH (n:character{name:'阿切尔·埃弗蒙德'}) return n.character.species",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:serve|like{start_year: 2000}]-(v)\nRETURN e, v",
    "GET SUBGRAPH 2 STEPS FROM \"Tim Duncan\" BOTH like YIELD edges as e\n| UNWIND $-.e as a | YIELD $-.a AS a",
    "MATCH (v:player) WITH (v)-[:teammate]->() AS p RETURN p",
    "MATCH (v:player{name: \"Damian Lillard\"})-[:like]-(v2)--(v3)\nWITH v3, v3.player.age AS age\nRETURN v3, age ORDER BY age LIMIT 3",
    "MATCH (v1) -[:like]-> (v2) -[:like]-> (v3)\nWHERE id(v1) == \"Tim Duncan\"\nRETURN v1.player.name AS Player, v2.player.name AS Friend, v3.player.name AS FoF",
    "MATCH (n:disease{name:\"血稠\"}) return n.disease.prevent",
    "MATCH (:player{name:\"Tim Duncan\"})-[e:like*2..3{likeness: 90}]->(v)\nRETURN e, v",
    "LOOKUP ON player WHERE player.age == 30 YIELD player.name, player.age + 1",
    "GO FROM \"Dwight Howard\" OVER like, teammate REVERSELY YIELD like.likeness, teammate.start_year, $$.player.name",
    "MATCH (n:disease{name:\"疥疮\"}) return n.disease.cause",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:like{likeness: 90}]->(v)\nRETURN e, v",
    "MATCH p = allShortestPaths( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.name == 'Tim Duncan' AND b.team.name == 'Spurs'\n  RETURN p",
    "LOOKUP ON player WHERE player.age > 30.5 YIELD id(vertex) as name, player.age AS Age",
    "LOOKUP ON disease WHERE disease.name == \"心脏病\" YIELD properties(vertex).get_prob",
    "FETCH PROP ON player \"Boris Diaw\", \"Tony Parker\" YIELD DISTINCT player.name, player.age",
    "GO FROM \"Dwight Howard\" OVER like, teammate REVERSELY YIELD like.likeness, teammate.start_year, $$.player.name",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "GET SUBGRAPH 2 STEPS FROM \"Tim Duncan\" BOTH like YIELD edges as e\n| UNWIND $-.e as a | YIELD $-.a AS a",
    "MATCH (n:player) WHERE id(n) == \"Boris Diaw\" RETURN n;",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:serve|like{start_year: 2000}]-(v)\nRETURN e, v",
    "FETCH PROP ON like \"Tony Parker\"->\"Tim Duncan\", \"Grant Hill\" -> \"Tracy McGrady\" YIELD edge as relationship |\nYIELD properties($-.relationship)",
    "GO FROM \"高血压\" OVER recommend_drug YIELD dst(edge);",
    "MATCH p = (v:player{name: \"Cory Joseph\"})-[e:like]-(v2)\nRETURN p",
    "MATCH (n:disease{name:\"三尖瓣闭锁\"}) return n.disease.prevent",
    "GET SUBGRAPH 1 STEPS FROM \"糖尿病\" YIELD VERTICES AS nodes, EDGES AS all_edges",
    "GO FROM \"Tony Parker\" OVER like REVERSELY YIELD like._dst",
    "MATCH (n:character{name:'奥塔莱恩·甘布尔'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (n:character{name:'克丽奥娜'}) return n.character.species",
    "MATCH (:player{name: \"Tim Duncan\"})-[e:like*2..3]->(v)\nRETURN e, v",
    "MATCH (n:character)-[e:kindred{rel_type:'孙辈'}]-(n1) WHERE n.character.name=='雅各布·科瓦尔斯基的祖母' return n1",
    "GO FROM \"Dwight Howard\" OVER like, teammate REVERSELY YIELD like.likeness, teammate.start_year, $$.player.name",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "GO 2 STEPS FROM 'Kobe Bryant' OVER like REVERSELY YIELD $$.player.name",
    "GO FROM \"糖尿病\" OVER recommend_drug YIELD dst(edge);",
    "MATCH (n:character{name:'伊丽莎白·斯马奇林'}) return n.character.species",
    "MATCH p = ()-[:like*2]->(v:player) WHERE id(v) == 'Grant Hill' RETURN p",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE like.likeness > 90\nYIELD like.likeness, teammate.start_year, $$.player.name",
    "$a = GO FROM 'Danny Green' OVER like YIELD like._src AS src, like._dst AS dst;\nGO FROM $a.dst OVER teammate YIELD $a.src AS src, $a.dst, teammate._dst AS dst",
    "INSERT EDGE like(likeness) VALUES \"Tim Duncan\"->\"Tim Parker\":(99);\nINSERT EDGE like(likeness) VALUES \"Tim Parker\"->\"Tony Parker\":(90);",
    "LOOKUP ON player WHERE player.age >= 29 YIELD id(vertex) as name, player.age AS Age",
    "GO 3 STEPS FROM \"Tim Duncan\" OVER like,serve\n  WHERE size(labels($$))>0 AND $$.player.age>40\n  yield $$ as v",
    "LOOKUP ON character WHERE character.name=='塞缪尔·G·寇豪格' YIELD properties(vertex).gender AS gender",
    "MATCH (n:character{name:'布拉德利'})-[e:belong_to]-(n1:group) return n1",
    "GO 0 TO 2 STEPS FROM 'Tony Parker' OVER like BIDIRECT YIELD DISTINCT like._dst",
    "FETCH PROP ON player \"Tony Parker\" YIELD player.name, player.age",
    "MATCH p2=(:player{name:\"Tim Duncan\"})-[e:like*1..2]-(:player{name:\"Tim Duncan\"})\nRETURN e.likeness AS e1",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "MATCH (v:player {name: \"Yao Ming\"})-[:serve*0..1]->() RETURN v.player.name",
    "INSERT EDGE like(likeness) VALUES \"Tim Duncan\"->\"Tim Parker\":(99);\nINSERT EDGE like(likeness) VALUES \"Tim Parker\"->\"Tony Parker\":(90);",
    "match (v:player) return properties(v).name AS name order by name limit 2;",
    "MATCH (v)-[:serve]->(t)\nWHERE id(t) == 'Pistons'\nRETURN v.player.name AS Name",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE like.likeness > 90\nYIELD like.likeness, teammate.start_year, $$.player.name",
    "MATCH (n:character)-[e:kindred{rel_type:'妻子'}]-(n1) WHERE n.character.name=='罗伯茨' return n1",
    "MATCH (v:player{name: 'Tim Duncan'})-[e]->() RETURN type(e), count(*)",
    "MATCH (n:character{name:'巴巴吉德·阿金巴德'})-[e:belong_to]-(n1:group) return n1",
    "FETCH PROP ON like \"Tony Parker\"->\"Tim Duncan\", \"Grant Hill\" -> \"Tracy McGrady\" YIELD edge as relationship |\nYIELD properties($-.relationship)",
    "GO FROM \"Paul Gasol\" OVER * YIELD like._dst, serve._dst, teammate._dst",
    "FETCH PROP ON player \"Boris Diaw\", \"Tony Parker\" YIELD DISTINCT player.name, player.age",
    "MATCH (v:player {name: \"Rudy Gay\"})-[:serve*0..1]->(n) RETURN n.player.name",
    "MATCH (n:character{name:'乔治·韦斯莱'})-[e]-(n1:group) return count(n1)",
    "GO FROM \"Grant Hill\" OVER like REVERSELY YIELD like._dst",
    "MATCH (n:character{name:'威尔米娜·塔夫特'})-[e:kindred{rel_type:'儿子'}]-(n1) return n1",
    "MATCH (n:character)-[e]-(n1:group{name:'邓布利多家族'}) return n",
    "MATCH(n:player)-[:like]->(m)\n  WHERE n.player.age > 35\n  RETURN DISTINCT id(n) AS id,\n                  count(n) AS count,\n                  sum(floor(n.player.age)) AS sum,\n                  max(m.player.age) AS max,\n                  min(n.player.age) AS min,\n                  avg(distinct n.player.age)+1 AS age,\n                  labels(m) AS lb\n        ORDER BY id, count, max, min\n        SKIP 10 LIMIT 20;",
    "LOOKUP ON character WHERE character.name=='安东宁·多洛霍夫' YIELD properties(vertex).eye AS eye",
    "MATCH (v:player)-[e:like]->(t) WHERE v.player.name=='Carmelo Anthony'  RETURN v.player.name, v.player.age",
    "GO FROM 'Tim Duncan' OVER like bidirect WHERE like.likeness > 90\nYIELD $^.player.name, like._dst, $$.player.name, like.likeness",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:serve|like{start_year: 2000}]->(v)\nRETURN e, v",
    "MATCH (n:disease)-[e:recommend_eat]->(n1:food) WHERE n.disease.name=='糖尿病' return n1.food.name",
    "GO FROM \"高血压\" OVER recommend_drug YIELD dst(edge);",
    "MATCH (n:character{name:'阿切尔·埃弗蒙德'})-[e:belong_to]-(n1:group) return n1",
    "match (v:player)-[e:like{likeness:-1}]->()  RETURN e",
    "match p= (v:player)-[e:like*1..2]->(d) where v.player.age > 20 return e",
    "MATCH (n:character{name:'杜格德·麦克费尔'})-[e]-(n1) return n LIMIT 5",
    "$v1 = YIELD \"Ray Allen\" AS a;\nFETCH PROP ON player $v1.a YIELD player.name AS name",
    "MATCH (n:disease{name:\"偏头痛\"}) return n.disease.cause",
    "MATCH (n:disease)-[e:recommend_eat]->(n1:food) WHERE n.disease.name=='坐骨神经盆腔出口狭窄症' return n1.food.name",
    "$a = GO FROM 'Danny Green' OVER like YIELD like._src AS src, like._dst AS dst;\nGO FROM $a.dst OVER teammate YIELD $a.src AS src, $a.dst, teammate._dst AS dst",
    "MATCH (v1) -[:like]-> (v2) -[:like]-> (v3)\nWHERE id(v1) == \"Tim Duncan\"\nRETURN v1.player.name AS Player, v2.player.name AS Friend, v3.player.name AS FoF",
    "FIND SHORTEST PATH FROM \"西弗勒斯·斯内普\" TO \"多洛雷斯·乌姆里奇\" OVER * YIELD path AS p",
    "MATCH (v:player) WHERE [t in [v] | (v)-[:like]->(t)] RETURN v.player.name AS name",
    "FETCH PROP ON player 'Tony Parker' YIELD player.name as Name |\nGO FROM $-.Name OVER like YIELD like._dst",
    "FETCH PROP ON player 'Boris Diaw' YIELD vertex as node",
    "LOOKUP ON disease WHERE disease.name == \"霍奇金病\" YIELD properties(vertex).get_prob",
    "INSERT EDGE like(likeness) VALUES \"Tim Duncan\"->\"Tim Parker\":(99);\nINSERT EDGE like(likeness) VALUES \"Tim Parker\"->\"Tony Parker\":(90);",
    "MATCH p2=(:player{name:\"Tim Duncan\"})-[e:like*1..2]-(:player{name:\"Tim Duncan\"})\nRETURN e.likeness AS e1",
    "MATCH (a:player)\nWHERE id(a)=='Tim Duncan'\nMATCH (a)-[:like]-(b)\nRETURN count(*) AS cnt",
    "match (v:player) return properties(v).name AS name order by name limit 2;",
    "GO 2 STEPS FROM 'Kobe Bryant' OVER like REVERSELY YIELD $$.player.name",
    "MATCH (n:character{name:'莫拉格·麦克道格'})-[e:learn_from]-(n1:college) return n1",
    "MATCH (n:disease)-[e:has_symptom]->(n1:symptom) WHERE n.disease.name=='戊型病毒性肝炎' return n1.symptom.name",
    "GO FROM \"Boris Diaw\" OVER like YIELD like._dst",
    "MATCH (n:disease{name:\"小儿莫拉雷脑膜炎\"}) return n.disease.symptom",
    "GO FROM \"Steve Nash\" OVER like REVERSELY YIELD like._dst",
    "GO FROM \"Dwight Howard\" OVER like, teammate REVERSELY YIELD like.likeness, teammate.start_year, $$.player.name",
    "MATCH (p1)-[:teammate]->(p2)\nRETURN p1.player.name, p2.player.name",
    "LOOKUP ON character WHERE character.name=='扎卡赖斯·史密斯' YIELD properties(vertex).eye AS eye",
    "GO FROM 'Russell Westbrook' OVER serve, like YIELD serve._dst, like._dst",
    "GO FROM \"Paul Gasol\" OVER * YIELD like._dst, serve._dst, teammate._dst",
    "MATCH (n:disease{name:\"小儿营养不良性消瘦\"}) return n.disease.cure_lasttime",
    "LOOKUP ON player WHERE player.age == 30 YIELD player.name, player.age + 1",
    "MATCH p = allShortestPaths( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.name == 'Tim Duncan' AND b.team.name == 'Spurs'\n  RETURN p",
    "FETCH PROP ON player \"Carmelo Anthony\" YIELD player.name, player.age",
    "$v1 = YIELD \"Ray Allen\" AS a;\nFETCH PROP ON player $v1.a YIELD player.name AS name",
    "GO FROM \"Carmelo Anthony\" OVER like YIELD like._dst| YIELD COUNT(*)",
    "FETCH PROP ON player \"Tony Parker\" YIELD player.name, player.age",
    "GO FROM \"Tim Duncan\" OVER like LIMIT 1;",
    "MATCH (n:character{name:'阿不思·西弗勒斯·波特'})-[e]-(n1) WHERE e.rel_type=='父亲' return n1",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE like.likeness > 90\nYIELD like.likeness, teammate.start_year, $$.player.name",
    "MATCH (v:player)-[e:like]->(t) WHERE v.player.name=='Carmelo Anthony'  RETURN v.player.name, v.player.age",
    "match (v:player) return v.player.name, v",
    "MATCH p = ()-[:like*2]->(v:player) WHERE id(v) == 'Grant Hill' RETURN p",
    "MATCH (v:player) WITH (v)-[:teammate]->() AS p RETURN p",
    "MATCH (n:character{name:'玛丽·卢·巴瑞波恩'})-[e]-(n1) WHERE e.rel_type=='养子' return n1",
    "GO FROM \"Carmelo Anthony\" OVER like YIELD like._dst| YIELD COUNT(*)",
    "MATCH p = ()-[:like*2]->(v:player) WHERE id(v) == 'Grant Hill' RETURN p",
    "$v1 = YIELD \"Ray Allen\" AS a;\nFETCH PROP ON player $v1.a YIELD player.name AS name",
    "GO FROM \"Tracy McGrady\" OVER like YIELD like._dst",
    "MATCH (n:disease)-[e:recommend_eat]->(n1:food) WHERE n.disease.name=='厥脱' return n1.food.name",
    "GO FROM \"Tony Parker\" OVER like YIELD id($$) AS vid | RETURN $-.vid AS dst",
    "MATCH (n:character{name:'罗恩·韦斯莱'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (n:character{name:'奥拉·奎尔克'}) return n.character.born",
    "MATCH p = shortestPath( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.age > 45 AND b.team.name == 'Spurs'\n  RETURN length(p)",
    "match p= (v:player)-[e:like*1..2]->(d) where v.player.age > 20 return e",
    "MATCH (n:character{name:'卡图卢斯·斯潘格尔'}) return n.character.born",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "MATCH (v)-[:serve]->(t)\nWHERE id(t) == 'Pistons'\nRETURN v.player.name AS Name",
    "GO 2 STEPS FROM 'Kobe Bryant' OVER like REVERSELY YIELD $$.player.name",
    "MATCH (:player{name:\"Tim Duncan\"})-[e:like*2..3{likeness: 90}]->(v)\nRETURN e, v",
    "MATCH (n:character{name:'瓦伦蒂娜·巴斯克斯'}) return n.character.born",
    "$v1 = YIELD \"Ray Allen\" AS a;\nFETCH PROP ON player $v1.a YIELD player.name AS name",
    "LOOKUP ON character WHERE character.name=='杜格德·麦克利沃' YIELD properties(vertex).dead AS dead",
    "GO FROM \"Tony Parker\" OVER like REVERSELY YIELD like._dst",
    "MATCH (v:player{name: \"Damian Lillard\"})-[:like]-(v2)--(v3)\nWITH v3, v3.player.age AS age\nRETURN v3, age ORDER BY age LIMIT 3",
    "MATCH (n:character)-[e:kindred{rel_type:'妻子'}]-(n1) WHERE n.character.name=='蒂尔登·图茨' return n1",
    "MATCH (v:team{name:\"Spurs\"})--(v2)\nRETURN v2 AS Player",
    "GO FROM \"Tim Duncan\" OVER like LIMIT 1;",
    "MATCH (v:team{name:\"Spurs\"})--(v2)\nRETURN v2 AS Player",
    "MATCH (v1) -[:like]-> (v)\nWHERE id(v1) == 'Dejounte Murray'\nRETURN v.player.name AS Name, v.player.age AS Age\nORDER BY Age DESC, Name ASC\nSKIP 11\nLIMIT 3",
    "MATCH (n:character{name:'尼古拉·瓦西勒娃'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (n:character{name:'贝内迪塔·多拉多'}) return n.character.species",
    "FETCH PROP ON player 'Tony Parker' YIELD player.name as Name |\nGO FROM $-.Name OVER like YIELD like._dst",
    "MATCH (v)-[:serve]->(t)\nWHERE (NOT NOT id(v) == 'Paul Gasol') AND id(v) == 'Paul Gasol'\nRETURN v.player.name AS Name, t.team.name AS Team",
    "MATCH (n:character)-[e:kindred{rel_type:'弟弟'}]-(n1) WHERE n.character.name=='吉德罗·洛哈特的姐姐' return n1",
    "MATCH (n:character{name:'怪人尤里克'}) return n.character.hair",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan' IN like, serve YIELD vertices as nodes, edges as relationships",
    "GO FROM \"霍奇金病\" OVER cure_way YIELD dst(edge);",
    "match p= (v:player)-[e:like*1..2]->(d) where v.player.age > 20 return e",
    "GO FROM \"Tony Parker\" OVER like YIELD like._dst",
    "MATCH (:player{name:\"Kyrie Irving\"})-[e:like*2..3]->()\nRETURN *",
    "MATCH (v1) -[:like]-> (v)\nWHERE id(v1) == 'Dejounte Murray'\nRETURN v.player.name AS Name, v.player.age AS Age\nORDER BY Age DESC, Name ASC\nSKIP 11\nLIMIT 3",
    "$v1 = YIELD \"Ray Allen\" AS a;\nFETCH PROP ON player $v1.a YIELD player.name AS name",
    "GO FROM \"Rajon Rondo\" OVER serve WHERE serve.start_year >= 2013 AND serve.end_year <= 2018\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH (v:player)-[e:like]->(v2) WHERE none_direct_dst(e) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *\nMINUS\nMATCH (v:player)-[e:like]->(v2) WHERE id(v2) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *",
    "FETCH PROP ON player \"Carmelo Anthony\" YIELD player.name, player.age",
    "MATCH (v:team{name:\"Spurs\"})--(v2)\nRETURN v2 AS Player",
    "MATCH (n:character{name:'西莫·斐尼甘'}) return n.character.hair",
    "MATCH (:player{name: \"Vince Carter\"})-[e1:like]->()-[e2:serve*0..3]->()<-[e3:serve]-(v)\nRETURN count(v)",
    "MATCH (n:character{name:'莫迪克斯·埃格'}) return n.character.eye",
    "MATCH (n:character{name:'坎坦克卢斯·诺特'})-[e]-(n1) return n LIMIT 2",
    "MATCH (n:character) WHERE n.character.name=='兰斯洛特' return n.character.species",
    "LOOKUP ON disease WHERE disease.name == \"液脱\" YIELD properties(vertex).get_prob",
    "MATCH (n:character{name:'拉奇迪恩'}) return n.character.gender",
    "match (v:player{age: 1+19}) RETURN v",
    "MATCH (n:character{name:'罗伯茨'}) return n.character.species",
    "MATCH (v:player{name: 'Rudy Gay'})-[e]->() RETURN type(e), count(*)",
    "GO FROM \"Boris Diaw\" OVER like YIELD like._dst",
    "GO FROM \"Tony Parker\" OVER like REVERSELY YIELD like._dst",
    "GO 1 TO 2 STEPS FROM 'Tony Parker' OVER like YIELD DISTINCT like._dst, like.likeness, $$.player.name",
    "GO FROM \"支气管炎\" OVER cure_department YIELD dst(edge);",
    "LOOKUP ON disease WHERE disease.name == \"支气管炎\" YIELD properties(vertex).get_prob",
    "FETCH PROP ON player \"Tony Parker\" YIELD player.name, player.age",
    "MATCH (n:character{name:'维奥莱塔·伯斯德'}) return n.character.blood",
    "MATCH (v:player{name: 'Tim Duncan'})-[e]->() RETURN type(e), count(*)",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "GO FROM \"Steve Nash\" OVER like REVERSELY YIELD like._dst",
    "MATCH p2=(:player{name:\"Tim Duncan\"})-[e:like*1..2]-(:player{name:\"Tim Duncan\"})\nRETURN e.likeness AS e1",
    "match (v:player{age: 1+19}) RETURN v",
    "FETCH PROP ON player 'Boris Diaw' YIELD vertex as node",
    "FETCH PROP ON player \"Carmelo Anthony\" YIELD player.name, player.age",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Tony Parker\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "MATCH (n:character{name:'妖精爵士歌手'}) return n.character.species",
    "MATCH (n:character{name:'亨利七世'})-[e:kindred{rel_type:'儿子'}]-(n1) return n1",
    "GO FROM \"霍奇金病\" OVER recommend_drug YIELD dst(edge);",
    "MATCH (v:player {name: \"Yao Ming\"})-[:serve*0..1]->() RETURN v.player.name",
    "GO FROM 'Tim Duncan' OVER like bidirect WHERE like.likeness > 90\nYIELD $^.player.name, like._dst, $$.player.name, like.likeness",
    "MATCH p = allShortestPaths( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.name == 'Tim Duncan' AND b.team.name == 'Spurs'\n  RETURN p",
    "GO FROM \"Boris Diaw\" OVER like YIELD like._dst",
    "FETCH PROP ON player \"Grant Hill\" YIELD player.name, player.age",
    "LOOKUP ON disease WHERE disease.name == \"戊型病毒性肝炎\" YIELD properties(vertex).prevent",
    "MATCH (n:character{name:'雅各布·科瓦尔斯基的祖母'}) return n.character.blood",
    "MATCH (n:character{name:'詹姆·小天狼星·波特'})-[e]-(n1) WHERE e.rel_type=='父亲' return n1",
    "MATCH p = shortestPath( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.age > 45 AND b.team.name == 'Spurs'\n  RETURN length(p)",
    "GO 1 TO 2 STEPS FROM 'Tony Parker' OVER like YIELD DISTINCT like._dst, like.likeness, $$.player.name",
    "GO FROM \"Grant Hill\" OVER like REVERSELY YIELD like._dst",
    "match (v:player{age: 1+19}) RETURN v",
    "MATCH (n:character{name:'赫伯特·博克'})-[e]-(n1) WHERE e.rel_type=='岳父' return n1",
    "MATCH (n:disease{name:\"泪腺炎\"}) return n.disease.symptom",
    "MATCH p = shortestPath( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.age > 45 AND b.team.name == 'Spurs'\n  RETURN length(p)",
    "MATCH (n:character{name:'杰克·斯劳珀'})-[e]-(n1) return n1",
    "match p= (v:player)-[e:like*1..2]->(d) where v.player.age > 20 return e",
    "MATCH (v1:player{name: \"LeBron James\"}) -[r:serve]-> (v2:team{name: \"Cavaliers\"})\nRETURN type(r) AS Type, v2.team.name AS Name",
    "MATCH (v:player {name: \"Rudy Gay\"})-[:serve*0..1]->(n) RETURN n.player.name",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Tony Parker\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "MATCH (n:disease{name:\"小儿雅克什综合征\"}) return n.disease.symptom",
    "MATCH (n:character{name:'吉德罗·洛哈特的姐姐'}) return n.character.blood",
    "MATCH (v:player{name: \"Damian Lillard\"})-[:like]-(v2)--(v3)\nWITH v3, v3.player.age AS age\nRETURN v3, age ORDER BY age LIMIT 3",
    "MATCH (n:player) WHERE id(n) == \"Boris Diaw\" RETURN n;",
    "MATCH (n:character)-[e:kindred{rel_type:'儿子'}]-(n1) WHERE n.character.name=='亨利·波特' return n1",
    "GO FROM 'Tim Duncan' OVER like bidirect WHERE like.likeness > 90\nYIELD $^.player.name, like._dst, $$.player.name, like.likeness",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst |\nFIND ALL PATH FROM $-.src TO $-.dst OVER like UPTO 3 STEPS YIELD path as p",
    "MATCH (v)-[:serve]->(t)\nWHERE (NOT NOT id(v) == 'Paul Gasol') AND id(v) == 'Paul Gasol'\nRETURN v.player.name AS Name, t.team.name AS Team",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE $$.player.age > 30 and $$.player.age < 40\nYIELD DISTINCT $$.player.age, $$.player.name",
    "MATCH (n:character{name:'特罗卡'})-[e:learn_from]-(n1:college) return n1.character.name",
    "MATCH (v:player{name: 'Rudy Gay'})-[e]->() RETURN type(e), count(*)",
    "GO FROM \"Tony Parker\" OVER like REVERSELY YIELD like._dst",
    "MATCH (n:disease{name:\"胰腺囊腺瘤和囊腺癌\"}) return n.disease.cure_lasttime",
    "MATCH (v:player)\nWHERE v.player.name>\"Grant Hill\" and  v.player.name<=\"Yao Ming\"\nRETURN v",
    "MATCH (n:character)-[e:kindred{rel_type:'祖先'}]-(n1) WHERE n.character.name=='赫普兹巴·史密斯' return n1",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "MATCH (:player{name:\"Kyrie Irving\"})-[e:like*2..3]->()\nRETURN *",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "GO 1 STEPS FROM 'Tim Duncan' OVER like YIELD like._dst as id | GO FROM $-.id OVER serve YIELD serve._dst",
    "$v1 = YIELD \"Ray Allen\" AS a;\nFETCH PROP ON player $v1.a YIELD player.name AS name",
    "MATCH (v:player {name: \"DeAndre Jordan\"}) RETURN v",
    "MATCH (n:disease{name:\"疥疮\"}) return n.disease.prevent",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Nobody\",\"Spur\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "GO FROM 'Tim Duncan' OVER like WHERE properties($$).age > 38 YIELD edge as e,  $$ as dst",
    "LOOKUP ON disease WHERE disease.name == \"霍奇金病\" YIELD properties(vertex).easy_get",
    "go 1 to 4 steps from \"Tim Duncan\" over like yield like.likeness, edge as e",
    "LOOKUP ON player WHERE player.age >= 29.5 YIELD id(vertex) as name, player.age AS Age",
    "LOOKUP ON disease WHERE disease.name == \"白血病\" YIELD properties(vertex).get_prob",
    "MATCH (v:player)-[e:like]->(t) WHERE v.player.name=='Carmelo Anthony'  RETURN v.player.name, v.player.age",
    "MATCH(n:player)-[:like]->(m)\n  WHERE n.player.age > 35\n  RETURN DISTINCT id(n) AS id,\n                  count(n) AS count,\n                  sum(floor(n.player.age)) AS sum,\n                  max(m.player.age) AS max,\n                  min(n.player.age) AS min,\n                  avg(distinct n.player.age)+1 AS age,\n                  labels(m) AS lb\n        ORDER BY id, count, max, min\n        SKIP 10 LIMIT 20;",
    "LOOKUP ON character WHERE character.name=='兰斯洛特' YIELD properties(vertex).species AS species",
    "FETCH PROP ON like \"Tony Parker\"->\"Tim Duncan\", \"Grant Hill\" -> \"Tracy McGrady\" YIELD edge as relationship |\nYIELD properties($-.relationship)",
    "MATCH (:player{name:\"Kyrie Irving\"})-[e:serve|like*2..3]-(v)\nRETURN count(v)",
    "MATCH (v:player{name: 'Tim Duncan'}) return v.player.name AS name",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v3) == 'Spurs' AND id(v1) == 'Tony Parker'\nRETURN v1, v2, v3",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE $$.player.age > 30 and $$.player.age < 40\nYIELD DISTINCT $$.player.age, $$.player.name",
    "MATCH (n:character)-[e:kindred{rel_type:'妹妹'}]-(n1) WHERE n.character.name=='芙蓉·德拉库尔' return n1",
    "GET SUBGRAPH 2 STEPS FROM \"Tim Duncan\" BOTH like YIELD edges as e\n| UNWIND $-.e as a | YIELD $-.a AS a",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:serve|like{start_year: 2000}]-(v)\nRETURN e, v",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "MATCH (v:player{name:\"Giannis Antetokounmpo\"}) RETURN v.name AS vname",
    "GO FROM \"Rajon Rondo\" OVER serve WHERE serve.start_year >= 2013 AND serve.end_year <= 2018\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH (n:character{name:'米拉贝拉·普伦基特'})-[e:belong_to]-(n1:group) return n1",
    "GO FROM \"Boris Diaw\" OVER serve YIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "LOOKUP ON character WHERE character.name=='安克谢斯·奥斯博特' YIELD properties(vertex).born AS born",
    "FETCH PROP ON player \"Boris Diaw\", \"Tony Parker\" YIELD DISTINCT player.name, player.age",
    "LOOKUP ON player\nWHERE player.name == 'Tim Duncan'\nYIELD player.age as age, id(vertex) as vid\n| UNWIND $-.vid as a | YIELD $-.a AS a",
    "match p= (v:player)-[e:like*1..2]->(d) where v.player.age > 20 return e",
    "LOOKUP ON like WHERE like.grade == 666 YIELD src(edge) as src, dst(edge) as dst",
    "MATCH (n:disease)-[e:recommend_eat]->(n1:food) WHERE n.disease.name=='心脏病' return n1.food.name",
    "MATCH (n:character{name:'周雅'})-[e:belong_to]-(n1:group) return n1",
    "MATCH p = ()-[:like*2]->(v:player) WHERE id(v) == 'Grant Hill' RETURN p",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan' IN like, serve YIELD vertices as nodes, edges as relationships",
    "MATCH (n:disease)-[e:recommend_eat]->(n1:food) WHERE n.disease.name=='多发性骨骺发育不良' return n1.food.name",
    "MATCH (v:player{name: 'Rudy Gay'})-[e]->() RETURN type(e), count(*)",
    "FETCH PROP ON player \"Jason Kidd\" YIELD player.name, player.age",
    "LOOKUP ON disease WHERE disease.name == \"糖尿病\" YIELD properties(vertex).get_prob",
    "MATCH (:player{name:\"Tim Duncan\"})-[e:like*2..3]->()\nRETURN *",
    "GO FROM \"Tracy McGrady\" OVER like YIELD like._dst",
    "GO FROM \"血红蛋白E病\" OVER cure_department YIELD dst(edge);",
    "MATCH (v1) -[:like]-> (v2) -[:like]-> (v3)\nWHERE id(v1) == \"Tim Duncan\"\nRETURN v1.player.name AS Player, v2.player.name AS Friend, v3.player.name AS FoF",
    "GO FROM \"Steve Nash\" OVER like REVERSELY YIELD like._dst",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Nobody\",\"Spur\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "MATCH (v)-[:serve]->(t)\nWHERE id(t) == 'Pistons'\nRETURN v.player.name AS Name",
    "LOOKUP ON player WHERE player.age == 30 YIELD player.name, player.age + 1",
    "GO FROM \"Carmelo Anthony\" OVER like YIELD like._dst| YIELD COUNT(*)",
    "MATCH (n:character{name:'哈桑·穆斯塔发'}) return n.character.hair",
    "GO FROM \"Boris Diaw\" OVER serve YIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "GO FROM \"Grant Hill\" OVER like REVERSELY YIELD like._dst",
    "MATCH (n:disease{name:\"泪腺炎\"}) return n.disease.prevent",
    "MATCH p = shortestPath( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.age > 45 AND b.team.name == 'Spurs'\n  RETURN length(p)",
    "FIND SHORTEST PATH FROM \"詹姆·小天狼星·波特\" TO \"德里安·普塞\" OVER * YIELD path AS p",
    "LOOKUP ON character WHERE character.name=='弗雷德·韦斯莱' YIELD properties(vertex).eye AS eye",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v2) == 'Tim Duncan'\nRETURN COUNT(*)",
    "GO FROM \"Manu Ginobili\" OVER * REVERSELY YIELD like.likeness, teammate.start_year, serve.start_year, $$.player.name",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan'\n  WHERE like.likeness > 95 AND like.likeness < 100\n  YIELD vertices as nodes, edges as relationships",
    "FETCH PROP ON player 'Tony Parker' YIELD player.name as Name |\nGO FROM $-.Name OVER like YIELD like._dst",
    "MATCH (v:player {name: \"Rudy Gay\"})-[:serve*0..1]->(n) RETURN n.player.name",
    "GET SUBGRAPH 1 STEPS FROM \"胸痛\" YIELD VERTICES AS nodes, EDGES AS all_edges",
    "GO 1 STEPS FROM 'Tim Duncan' OVER like YIELD like._dst as id | GO FROM $-.id OVER serve YIELD serve._dst",
    "GO 2 STEPS FROM \"埃尔德·沃普尔\" OVER kindred YIELD dst(edge)",
    "GO FROM \"LaMarcus Aldridge\" OVER * YIELD $$.team.name, $$.player.name",
    "MATCH (n:character)-[e:kindred{rel_type:'母亲'}]-(n1) WHERE n.character.name=='雷古勒斯·布莱克' return n1",
    "MATCH (:player{name:\"Tim Duncan\"})-[e:like*2..3{likeness: 90}]->(v)\nRETURN e, v",
    "GO FROM \"呼吸系统疾病伴发的精神障碍\" OVER recommend_drug YIELD dst(edge);",
    "MATCH (n:disease{name:\"骨外软骨肉瘤\"}) return n.disease.cause",
    "MATCH (:player{name:\"Tim Duncan\"})<-[e:like*2..3{likeness: 90}]-(v)\nRETURN e, v",
    "GO FROM \"心脏病\" OVER recommend_drug YIELD dst(edge);",
    "FIND SHORTEST PATH FROM \"哈方·蒙特\" TO \"约塞利德·瓦德考克\" OVER * YIELD path AS p",
    "MATCH (v:player{name:\"Giannis Antetokounmpo\"}) RETURN v.name AS vname",
    "GET SUBGRAPH 1 STEPS FROM \"神经棘红细胞增多症\" YIELD VERTICES AS nodes, EDGES AS all_edges",
    "INSERT EDGE like(likeness) VALUES \"Tim Duncan\"->\"Tim Parker\":(99);\nINSERT EDGE like(likeness) VALUES \"Tim Parker\"->\"Tony Parker\":(90);",
    "GO FROM 'Russell Westbrook' OVER serve, like YIELD serve._dst, like._dst",
    "GO FROM \"戊型病毒性肝炎\" OVER cure_department YIELD dst(edge);",
    "MATCH (v:player{name: 'Tim Duncan'})-[e]->() RETURN type(e), count(*)",
    "MATCH (v:player{name: \"Damian Lillard\"})-[:like]-(v2)--(v3)\nWITH v3, v3.player.age AS age\nRETURN v3, age ORDER BY age LIMIT 3",
    "FETCH PROP ON player 'Boris Diaw' YIELD vertex as node",
    "MATCH (n:character)-[e:kindred{rel_type:'父亲'}]-(n1) WHERE n.character.name=='帕金 (追球手II)' return n1",
    "MATCH (n:disease{name:\"小肠气痛\"}) return n.disease.cause",
    "GO FROM \"Dwight Howard\" OVER like, teammate REVERSELY YIELD like.likeness, teammate.start_year, $$.player.name",
    "MATCH (n:character{name:'埃尔德·沃普尔'})-[e]-(n1) return n LIMIT 2",
    "GO FROM \"Dwight Howard\" OVER like, teammate REVERSELY YIELD like.likeness, teammate.start_year, $$.player.name",
    "LOOKUP ON disease WHERE disease.name == \"老年人支气管扩张\" YIELD properties(vertex).get_prob",
    "LOOKUP ON disease WHERE disease.name == \"心脏病\" YIELD properties(vertex).get_prob",
    "MATCH (n:disease{name:\"小儿糖原贮积病Ⅳ型\"}) return n.disease.symptom",
    "MATCH (n:character)-[e:kindred{rel_type:'丈夫'}]-(n1) WHERE n.character.name=='维奥莱塔·伯斯德' return n1",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE $$.player.age > 30 and $$.player.age < 40\nYIELD DISTINCT $$.player.age, $$.player.name",
    "MATCH (v)-[:serve]->(t)\nWHERE (NOT NOT id(v) == 'Paul Gasol') AND id(v) == 'Paul Gasol'\nRETURN v.player.name AS Name, t.team.name AS Team",
    "MATCH (n:character{name:'芙蓉·德拉库尔'}) return n.character.eye",
    "GO FROM 'Tim Duncan' OVER like WHERE properties($$).age > 38 YIELD edge as e,  $$ as dst",
    "MATCH (n:character{name:'杰克·斯劳珀'})-[e:learn_from]-(n1:college) return n1.college.name",
    "GO FROM \"Steve Nash\" OVER like REVERSELY YIELD like._dst",
    "LOOKUP ON disease WHERE disease.name == \"高血压\" YIELD properties(vertex).get_prob",
    "LOOKUP ON player\nWHERE player.name == 'Tim Duncan'\nYIELD player.age as age, id(vertex) as vid\n| UNWIND $-.vid as a | YIELD $-.a AS a",
    "MATCH (n:character{name:'亚瑟·韦斯莱'})-[e]-(n1:character{name:'弗雷德·韦斯莱'}) return n1",
    "MATCH (n:character{name:'莫瑞根'})-[e:kindred{rel_type:'后裔'}]-(n1) return n1",
    "MATCH (n:disease)-[e:recommend_eat]->(n1:food) WHERE n.disease.name=='高血压' return n1.food.name",
    "MATCH (a:player)\nWHERE id(a)=='Tim Duncan'\nMATCH (a)-[:like]-(b)\nRETURN count(*) AS cnt",
    "$a = GO FROM 'Danny Green' OVER like YIELD like._src AS src, like._dst AS dst;\nGO FROM $a.dst OVER teammate YIELD $a.src AS src, $a.dst, teammate._dst AS dst",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE $$.player.age > 30 and $$.player.age < 40\nYIELD DISTINCT $$.player.age, $$.player.name",
    "LOOKUP ON player WHERE player.age > 30.5 YIELD id(vertex) as name, player.age AS Age",
    "GET SUBGRAPH 1 STEPS FROM \"糖尿病\" YIELD VERTICES AS nodes, EDGES AS all_edges",
    "MATCH (v:player)\nWHERE v.player.name>\"Grant Hill\" and  v.player.name<=\"Yao Ming\"\nRETURN v",
    "match (v:player) where id(v)==\"Carmelo Anthony\" return properties(v).age;",
    "MATCH (n:character{name:'玛莎'})-[e]-(n1:group) return n1",
    "MATCH (n:character{name:'鲍曼·赖特'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (n:disease{name:\"纵隔非霍奇金淋巴瘤\"}) return n.disease.symptom",
    "MATCH (n:character{name:'鲁道夫·布兰德'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (v:player {name: \"DeAndre Jordan\"}) RETURN v",
    "MATCH (n:disease{name:\"高血压\"}) return n.disease.cause",
    "GO FROM 'Tim Duncan' OVER like WHERE properties($$).age > 38 YIELD edge as e,  $$ as dst",
    "INSERT EDGE like(likeness) VALUES \"Tim Duncan\"->\"Tim Parker\":(99);\nINSERT EDGE like(likeness) VALUES \"Tim Parker\"->\"Tony Parker\":(90);",
    "LOOKUP ON like WHERE like.grade == 666 YIELD src(edge) as src, dst(edge) as dst",
    "MATCH (n:disease{name:\"外阴银屑病\"}) return n.disease.symptom",
    "MATCH (n:disease{name:\"慢性淋巴细胞性白血病\"}) return n.disease.cause",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE $$.player.age > 30 and $$.player.age < 40\nYIELD DISTINCT $$.player.age, $$.player.name",
    "GO FROM \"Boris Diaw\" OVER like YIELD like._dst",
    "MATCH (n:disease{name:\"戊型病毒性肝炎\"}) return n.disease.cause",
    "MATCH (n:character{name:'埃拉朵拉·凯特里奇'}) return n.character.hair",
    "MATCH (v1) -[:like]-> (v2) -[:like]-> (v3)\nWHERE id(v1) == \"Tim Duncan\"\nRETURN v1.player.name AS Player, v2.player.name AS Friend, v3.player.name AS FoF",
    "MATCH (n:character{name:'赫尔伯特·斯普林'})-[e]-(n1:group) return count(n1)",
    "MATCH (n:character{name:'阿尔莫里克·索布里奇'}) return n.character.hair",
    "MATCH (n:disease{name:\"餐后血糖过低症\"}) return n.disease.cured_prob",
    "MATCH (n:character{name:'特拉弗斯'}) return n.character.blood",
    "match (v:player) return properties(v).name AS name order by name limit 2;",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan' IN like, serve YIELD vertices as nodes, edges as relationships",
    "GO FROM \"Steve Nash\" OVER like REVERSELY YIELD like._dst",
    "YIELD \"Yao Ming\" AS src, \"Tony Parker\" AS dst\n| FIND SHORTEST PATH FROM $-.src TO $-.dst OVER like, serve UPTO 5 STEPS YIELD path as p",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan'\n  WHERE like.likeness > 95 AND like.likeness < 100\n  YIELD vertices as nodes, edges as relationships",
    "MATCH (v)-[:serve]->(t)\nWHERE id(t) == 'Pistons'\nRETURN v.player.name AS Name",
    "MATCH (n:disease{name:\"睾丸肿瘤\"}) return n.disease.cured_prob",
    "MATCH (v:player)-[e:like]->(t) WHERE v.player.name=='Carmelo Anthony'  RETURN v.player.name, v.player.age",
    "LOOKUP ON player WHERE player.age > 30.5 YIELD id(vertex) as name, player.age AS Age",
    "MATCH (p1)-[:teammate]->(p2)\nRETURN p1.player.name, p2.player.name",
    "GO FROM 'Boris Diaw' OVER serve WHERE $$.team.name CONTAINS \"Haw\"\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "GO 2 STEPS FROM \"弗雷德·韦斯莱\" OVER kindred YIELD dst(edge)",
    "MATCH (n:character{name:'财政大臣'}) return n.character.species",
    "$var = GO FROM \"Tracy McGrady\" OVER like YIELD like._dst as id; GO FROM $var.id OVER like YIELD like._dst",
    "GO FROM 'Tim Duncan' OVER like WHERE properties($$).age > 38 YIELD edge as e,  $$ as dst",
    "MATCH p = allShortestPaths( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.name == 'Tim Duncan' AND b.team.name == 'Spurs'\n  RETURN p",
    "match (v:player) return v.player.name, v",
    "$var = GO FROM \"Tracy McGrady\" OVER like YIELD like._dst as id; GO FROM $var.id OVER like YIELD like._dst",
    "GO FROM 'Russell Westbrook' OVER serve, like YIELD serve._dst, like._dst",
    "MATCH (n:character)-[e]-(n1:group{name:'鼻涕虫俱乐部'}) return n",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "MATCH (v:player{name: 'Tim Duncan'}) return v.player.name AS name",
    "MATCH (v)\nWHERE id(v) == 'Tim Duncan'\nRETURN v.player.name AS Name",
    "MATCH (v:player)-[e:like]->(t) WHERE v.player.name=='Carmelo Anthony'  RETURN v.player.name, v.player.age",
    "MATCH (v:player) WHERE [t in [v] | (v)-[:like]->(t)] RETURN v.player.name AS name",
    "MATCH (:player{name: \"Vince Carter\"})-[e1:like]->()-[e2:serve*0..3]->()<-[e3:serve]-(v)\nRETURN count(v)",
    "MATCH (v:team{name:\"Spurs\"})--(v2)\nRETURN v2 AS Player",
    "MATCH (v:player)-[e:like]->(v2) WHERE none_direct_dst(e) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *\nMINUS\nMATCH (v:player)-[e:like]->(v2) WHERE id(v2) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *",
    "MATCH (n:character{name:'拉尔斯·伦德克万'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (n:character{name:'西莫·斐尼甘的父亲'}) return n.character.blood",
    "MATCH (v)\nWHERE id(v) == 'Tim Duncan'\nRETURN v.player.name AS Name",
    "MATCH (n:disease)-[e:has_symptom]->(n1:symptom) WHERE n.disease.name=='霍奇金病' return n1.symptom.name",
    "match (v:player) where id(v)==\"Carmelo Anthony\" return properties(v).age;",
    "MATCH (n:disease)-[e:recommend_eat]->(n1:food) WHERE n.disease.name=='戊型病毒性肝炎' return n1.food.name",
    "GO 1 STEPS FROM 'Tim Duncan' OVER like YIELD like._dst as id | GO FROM $-.id OVER serve YIELD serve._dst",
    "GO FROM 'Russell Westbrook' OVER serve, like YIELD serve._dst, like._dst",
    "MATCH (:player{name: \"Tim Duncan\"})-[e1:like]->()-[e2:serve*0..3]->()<-[e3:serve]-(v)\nRETURN count(v)",
    "MATCH (n:player) WHERE id(n) == \"Boris Diaw\" RETURN n;",
    "MATCH (v:player{name: \"abc\"}) -[:serve*..3]-> ()\nRETURN *",
    "MATCH p = allShortestPaths( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.name == 'Tim Duncan' AND b.team.name == 'Spurs'\n  RETURN p",
    "go 1 to 4 steps from \"Tim Duncan\" over like yield like.likeness, edge as e",
    "FETCH PROP ON player \"Grant Hill\" YIELD player.name, player.age",
    "MATCH (n:character{name:'巴巴吉德·阿金巴德'}) return n.character.gender",
    "GO FROM \"心脏病\" OVER cure_department YIELD dst(edge);",
    "MATCH (n:character{name:'格奥尔基·兹德拉夫科'}) return n.character.gender",
    "GO FROM \"Tim Duncan\" OVER like LIMIT 1;",
    "MATCH (v1) -[:like]-> (v)\nWHERE id(v1) == 'Dejounte Murray'\nRETURN v.player.name AS Name, v.player.age AS Age\nORDER BY Age DESC, Name ASC\nSKIP 11\nLIMIT 3",
    "MATCH (n:disease)-[]->(n1:cure{name:'药物治疗'}) return count(n)",
    "match (v:player{age: 1+19}) RETURN v",
    "MATCH (n:character)-[e]-(n1:group{name:'普德米尔联队'}) return n",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:serve|like{start_year: 2000}]->(v)\nRETURN e, v",
    "GO FROM \"Boris Diaw\" OVER serve YIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH (:player{name:\"Kyrie Irving\"})-[e:serve|like*2..3]-(v)\nRETURN count(v)",
    "LOOKUP ON player WHERE player.age >= 29.5 YIELD id(vertex) as name, player.age AS Age",
    "MATCH (n:player) WHERE id(n) == \"Boris Diaw\" RETURN n;",
    "MATCH (v1) -[:like]-> (v)\nWHERE id(v1) == 'Dejounte Murray'\nRETURN v.player.name AS Name, v.player.age AS Age\nORDER BY Age DESC, Name ASC\nSKIP 11\nLIMIT 3",
    "FETCH PROP ON player \"Tony Parker\" YIELD player.name, player.age",
    "GO FROM \"霍奇金病\" OVER cure_way YIELD dst(edge);",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v3) == 'Spurs' AND id(v1) == 'Tony Parker'\nRETURN v1, v2, v3",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "MATCH (n:character{name:'埃里克·华莱'}) return n.character.gender",
    "GO FROM \"遗传性凝血因子ⅩⅢ缺乏\" OVER recommend_drug YIELD dst(edge);",
    "GO FROM \"Tim Duncan\" OVER like YIELD like._dst AS dst | YIELD DISTINCT $-.dst AS dst",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "MATCH p = (v:player{name: \"Cory Joseph\"})-[e:like]-(v2)\nRETURN p",
    "LOOKUP ON disease WHERE disease.name == \"戊型病毒性肝炎\" YIELD properties(vertex).prevent",
    "MATCH (n:disease)-[e:accompany_with]->(n1:disease{name:'高血压'}) return n.disease.name",
    "GO FROM \"Carmelo Anthony\" OVER like YIELD like._dst| YIELD COUNT(*)",
    "MATCH (n:character{name:'迪米特洛夫'})-[]-(n1:group) return n1",
    "MATCH (n:disease)-[e:accompany_with]->(n1:disease{name:'糖尿病'}) return n.disease.name",
    "GO FROM \"软组织损伤\" OVER cure_department YIELD dst(edge);",
    "MATCH (n:disease{name:\"眼睑热性疱疹\"}) return n.disease.cure_lasttime",
    "GO FROM 'Boris Diaw' OVER serve WHERE $$.team.name CONTAINS \"Haw\"\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH (v:player)\nWHERE v.player.name>\"Grant Hill\" and  v.player.name<=\"Yao Ming\"\nRETURN v",
    "MATCH p = allShortestPaths( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.name == 'Tim Duncan' AND b.team.name == 'Spurs'\n  RETURN p",
    "GO FROM \"Paul Gasol\" OVER * YIELD like._dst, serve._dst, teammate._dst",
    "GO 2 STEPS FROM \"赫尔伯特·斯普林\" OVER kindred YIELD dst(edge)",
    "MATCH (v)\nWHERE id(v) == 'Tim Duncan'\nRETURN v.player.name AS Name",
    "GO FROM 'Russell Westbrook' OVER serve, like YIELD serve._dst, like._dst",
    "MATCH (v1:player{name: \"LeBron James\"}) -[r:serve]-> (v2:team{name: \"Cavaliers\"})\nRETURN type(r) AS Type, v2.team.name AS Name",
    "MATCH (n:disease{name:\"颜面部疖痈\"}) return n.disease.easy_get",
    "GO FROM 'Boris Diaw' OVER serve WHERE $$.team.name CONTAINS \"Haw\"\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH (v)-[:serve]->(t)\nWHERE id(t) == 'Pistons'\nRETURN v.player.name AS Name",
    "MATCH (n:character{name:'赫普兹巴·史密斯'})-[e:learn_from]-(n1:college) return n1.college.name",
    "MATCH (v:player{name: \"Damian Lillard\"})-[:like]-(v2)--(v3)\nWITH v3, v3.player.age AS age\nRETURN v3, age ORDER BY age LIMIT 3",
    "MATCH (:player{name: \"Tim Duncan\"})-[e1:like]->()-[e2:serve*0..3]->()<-[e3:serve]-(v)\nRETURN count(v)",
    "MATCH (n:character{name:'吉姆·麦古'}) return n.character.blood",
    "MATCH (n:disease)-[]->(n1:cure{name:'药物治疗'}) return count(n)",
    "GO FROM \"Carmelo Anthony\" OVER like YIELD like._dst| YIELD COUNT(*)",
    "MATCH (v:player)-[e:like]->(t) WHERE v.player.name=='Carmelo Anthony'  RETURN v.player.name, v.player.age",
    "MATCH (v:player{name:\"Giannis Antetokounmpo\"}) RETURN v.name AS vname",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Nobody\",\"Spur\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "GET SUBGRAPH 2 STEPS FROM \"索尔·克罗克\" YIELD VERTICES AS nodes, EDGES AS relationships;",
    "MATCH (v:player{name: 'Tim Duncan'}) return v.player.name AS name",
    "MATCH (:player{name:\"Kyrie Irving\"})-[e:serve|like*2..3]-(v)\nRETURN count(v)",
    "MATCH (p1)-[:teammate]->(p2)\nRETURN p1.player.name, p2.player.name",
    "GO 2 STEPS FROM 'Kobe Bryant' OVER like REVERSELY YIELD $$.player.name",
    "MATCH (n:disease{name:\"三尖瓣闭锁\"}) return n.disease.cause",
    "GO FROM \"Rajon Rondo\" OVER serve WHERE serve.start_year >= 2013 AND serve.end_year <= 2018\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "GO FROM \"Tracy McGrady\" OVER like YIELD like._dst",
    "MATCH (v:player{name: 'Rudy Gay'})-[e]->() RETURN type(e), count(*)",
    "MATCH (n:disease{name:\"小儿营养不良性消瘦\"}) return n.disease.cause",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE $$.player.age > 30 and $$.player.age < 40\nYIELD DISTINCT $$.player.age, $$.player.name",
    "MATCH p = allShortestPaths( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.name == 'Tim Duncan' AND b.team.name == 'Spurs'\n  RETURN p",
    "MATCH (v1:player{name: \"LeBron James\"}) -[r:serve]-> (v2:team{name: \"Cavaliers\"})\nRETURN type(r) AS Type, v2.team.name AS Name",
    "MATCH (n:character{name:'梅林达·波宾'})-[e:belong_to]-(n1:group) return n1",
    "GO FROM \"Tim Duncan\" OVER like LIMIT 1;",
    "GO FROM \"霍奇金病\" OVER need_check YIELD dst(edge);",
    "MATCH (n:character{name:'赫伯特·博克'})-[e]-(n1:group) return n1",
    "GET SUBGRAPH 2 STEPS FROM \"杜格德·麦克费尔\" YIELD VERTICES AS nodes, EDGES AS relationships;",
    "MATCH (:player{name:\"Kyrie Irving\"})-[e:serve|like*2..3]-(v)\nRETURN count(v)",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:like{likeness: 90}]->(v)\nRETURN e, v",
    "MATCH p = ()-[:like*2]->(v:player) WHERE id(v) == 'Grant Hill' RETURN p",
    "GO FROM 'Tim Duncan' OVER like WHERE properties($$).age > 38 YIELD edge as e,  $$ as dst",
    "GO FROM \"Carmelo Anthony\" OVER like YIELD like._dst| YIELD COUNT(*)",
    "FETCH PROP ON player 'Tony Parker' YIELD player.name as Name |\nGO FROM $-.Name OVER like YIELD like._dst",
    "MATCH (:player{name: \"Tim Duncan\"})-[e:like*2..3]->(v)\nRETURN e, v",
    "MATCH (n:character{name:'上巴恩顿的汉吉斯'}) return n.character.dead",
    "GO 2 STEPS FROM \"卡桑德拉·瓦布拉斯基\" OVER kindred YIELD dst(edge)",
    "MATCH (n:disease)-[e:has_symptom]->(n1:symptom) WHERE n.disease.name=='酒精中毒性神经疾病' return n1.symptom.name",
    "MATCH (n:character{name:'巴巴吉德·阿金巴德'})-[e:belong_to]-(n1:group) return n1",
    "GO 2 STEPS FROM 'Kobe Bryant' OVER like REVERSELY YIELD $$.player.name",
    "MATCH (n:disease{name:\"软组织损伤\"}) return n.disease.prevent",
    "MATCH (n:disease{name:\"小儿中暑和暑热症\"}) return n.disease.prevent",
    "FETCH PROP ON player \"Boris Diaw\", \"Tony Parker\" YIELD DISTINCT player.name, player.age",
    "match (v:player) where id(v)==\"Carmelo Anthony\" return properties(v).age;",
    "GET SUBGRAPH 1 STEPS FROM \"胸痛\" YIELD VERTICES AS nodes, EDGES AS all_edges",
    "MATCH (v:player)-[e:like]->(v2) WHERE none_direct_dst(e) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *\nMINUS\nMATCH (v:player)-[e:like]->(v2) WHERE id(v2) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *",
    "MATCH (n:character{name:'梅林达·波宾'}) return n.character.blood",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst |\nFIND SHORTEST PATH FROM $-.src TO $-.dst OVER like UPTO 5 STEPS YIELD path as p |\nORDER BY $-.p | LIMIT 10",
    "MATCH (n:character{name:'忒修斯·斯卡曼德'})-[e:kindred{rel_type:'未婚妻'}]-(n1) return n1",
    "MATCH (:player{name:\"Kyrie Irving\"})-[e:serve|like*2..3]-(v)\nRETURN count(v)",
    "GO 1 STEPS FROM 'Tim Duncan' OVER like YIELD like._dst as id | GO FROM $-.id OVER serve YIELD serve._dst",
    "MATCH (n:disease{name:\"疰夏\"}) return n.disease.prevent",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "MATCH (v:player{name: 'Tim Duncan'}) return v.player.name AS name",
    "match (v:player) where id(v)==\"Carmelo Anthony\" return properties(v).age;",
    "GO FROM \"厥脱\" OVER cure_department YIELD dst(edge);",
    "FETCH PROP ON player 'Boris Diaw' YIELD vertex as node",
    "GO FROM \"Rajon Rondo\" OVER serve WHERE serve.start_year >= 2013 AND serve.end_year <= 2018\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan' IN like, serve YIELD vertices as nodes, edges as relationships",
    "MATCH (n:disease)-[]->(n1:drug{name:'脑血康丸'}) return n.disease.name",
    "MATCH (v:player{name: 'Tim Duncan'}) return v.player.name AS name",
    "MATCH (n:character)-[e:kindred{rel_type:'妻子'}]-(n1) WHERE n.character.name=='西莫·斐尼甘的父亲' return n1",
    "MATCH (n:character{name:'莫恩'}) return n.character.born",
    "MATCH (n:character{name:'雅各布·科瓦尔斯基的兄弟'}) return n.character.species",
    "LOOKUP ON character WHERE character.name=='阿布拉克萨斯·马尔福' YIELD properties(vertex).blood AS blood",
    "go 1 to 4 steps from \"Tim Duncan\" over like yield like.likeness, edge as e",
    "match (v:player) where id(v)==\"Carmelo Anthony\" return properties(v).age;",
    "GO FROM \"Tracy McGrady\" OVER like YIELD like._dst",
    "MATCH (n:disease)-[]->(n1:drug{name:'前列通片'}) return n.disease.name",
    "MATCH (n:character)-[e:kindred{rel_type:'父亲'}]-(n1) WHERE n.character.name=='帕金 (追球手II)' return n1",
    "MATCH (n:character{name:'吉米·珀克斯'})-[e:learn_from]-(n1:college) return n1",
    "GO FROM \"心脏病\" OVER cure_department YIELD dst(edge);",
    "LOOKUP ON player WHERE player.age >= 29.5 YIELD id(vertex) as name, player.age AS Age",
    "MATCH (p1)-[:teammate]->(p2)\nRETURN p1.player.name, p2.player.name",
    "MATCH (n:character{name:'罗恩·韦斯莱'})-[e:kindred{rel_type:'父亲'}]-(n1) return n1",
    "LOOKUP ON player WHERE player.age == 40 YIELD player.name, player.age + 1",
    "MATCH (n:character{name:'西莫·斐尼甘'})-[e:belong_to]-(n1:group) return n1",
    "FETCH PROP ON player \"Jason Kidd\" YIELD player.name, player.age",
    "GO FROM \"Tony Parker\" OVER like YIELD id($$) AS vid | RETURN $-.vid AS dst",
    "GO FROM \"Manu Ginobili\" OVER * REVERSELY YIELD like.likeness, teammate.start_year, serve.start_year, $$.player.name",
    "LOOKUP ON character WHERE character.name=='戴西·多德里奇' YIELD properties(vertex).eye AS eye",
    "MATCH (:player{name:\"Tim Duncan\"})<-[e:like*2..3{likeness: 90}]-(v)\nRETURN e, v",
    "MATCH (n:disease{name:\"迁延性昏迷\"}) return n.disease.easy_get",
    "MATCH (v:player{name: 'Tim Duncan'})-[e]->() RETURN type(e), count(*)",
    "YIELD \"Yao Ming\" AS src, \"Tony Parker\" AS dst\n| FIND SHORTEST PATH FROM $-.src TO $-.dst OVER like, serve UPTO 5 STEPS YIELD path as p",
    "FETCH PROP ON disease \"戊型病毒性肝炎\" YIELD properties(vertex).cured_prob as prob",
    "MATCH (n:character)-[e:Kindred{rel_type:'嫂子'}]-(n1) WHERE n.character.name=='约拉·布莱克' return n1",
    "MATCH (n:disease)-[e:recommend_eat]->(n1:food) WHERE n.disease.name=='白血病' return n1.food.name",
    "match (player)-[s:serve]->(team) where s.start_year == 2001 return player.player.name AS player, team.team.name AS team",
    "GO FROM \"Tracy McGrady\" OVER like YIELD like._dst",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan'\n  WHERE like.likeness > 95 AND like.likeness < 100\n  YIELD vertices as nodes, edges as relationships",
    "FETCH PROP ON player \"Grant Hill\" YIELD player.name, player.age",
    "MATCH (v:player{name: 'Tim Duncan'}) return v.player.name AS name",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst |\nFIND SHORTEST PATH FROM $-.src TO $-.dst OVER like UPTO 5 STEPS YIELD path as p |\nORDER BY $-.p | LIMIT 10",
    "GO 0 TO 2 STEPS FROM 'Tony Parker' OVER like BIDIRECT YIELD DISTINCT like._dst",
    "MATCH (:player{name:\"Tim Duncan\"})<-[e:like*2..3{likeness: 90}]-(v)\nRETURN e, v",
    "MATCH (v:player {name: \"Yao Ming\"})-[:serve*0..1]->() RETURN v.player.name",
    "FETCH PROP ON disease \"霍奇金病\" YIELD properties(vertex).cured_prob as prob",
    "GET SUBGRAPH 2 STEPS FROM \"Tim Duncan\" BOTH like YIELD edges as e\n| UNWIND $-.e as a | YIELD $-.a AS a",
    "GO FROM \"Kristaps Porzingis\" OVER like YIELD id($$) AS vid | RETURN $-.vid AS dst",
    "FETCH PROP ON player \"Jason Kidd\" YIELD player.name, player.age",
    "GO FROM \"软纤维瘤\" OVER recommend_drug YIELD dst(edge);",
    "GO 1 STEPS FROM 'Tim Duncan' OVER like YIELD like._dst as id | GO FROM $-.id OVER serve YIELD serve._dst",
    "MATCH p = ()-[:like*2]->(v:player) WHERE id(v) == 'Grant Hill' RETURN p",
    "MATCH (v:player {name: \"Yao Ming\"})-[:serve*0..1]->() RETURN v.player.name",
    "MATCH (n:character{name:'凯文·布罗德莫'})-[e]-(n1) WHERE e.rel_type=='弟弟' return n1",
    "MATCH (n:character{name:'利奥波迪娜·斯梅绥克'})-[]-(n1) return n1 LIMIT 2",
    "MATCH (n:disease)-[]->(n1:cure{name:'药物治疗'}) return count(n)",
    "MATCH (n:character{name:'温迪克·温瑞迪安'})-[e]-(n1:group) return count(n1)",
    "$v1 = YIELD \"Ray Allen\" AS a;\nFETCH PROP ON player $v1.a YIELD player.name AS name",
    "YIELD \"Yao Ming\" AS src, \"Tony Parker\" AS dst\n| FIND SHORTEST PATH FROM $-.src TO $-.dst OVER like, serve UPTO 5 STEPS YIELD path as p",
    "MATCH (v:player {name: \"Yao Ming\"})-[:serve*0..1]->() RETURN v.player.name",
    "GO 2 STEPS FROM 'Kobe Bryant' OVER like REVERSELY YIELD $$.player.name",
    "MATCH (n:character{name:'莫瑞根'}) return n.character.blood",
    "FETCH PROP ON player \"Tony Parker\" YIELD player.name, player.age",
    "MATCH p = (v:player{name: \"Cory Joseph\"})-[e:like]-(v2)\nRETURN p",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE like.likeness > 90\nYIELD like.likeness, teammate.start_year, $$.player.name",
    "MATCH (v:player{name: \"abc\"}) -[:serve*..3]-> ()\nRETURN *",
    "MATCH (:player{name: \"Vince Carter\"})-[e1:like]->()-[e2:serve*0..3]->()<-[e3:serve]-(v)\nRETURN count(v)",
    "MATCH (v:player)-[e:like]->(v2) WHERE none_direct_dst(e) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *\nMINUS\nMATCH (v:player)-[e:like]->(v2) WHERE id(v2) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *",
    "GO FROM \"Boris Diaw\" OVER like YIELD like._dst",
    "GO 2 STEPS FROM \"阿布拉克萨斯·马尔福\" OVER kindred WHERE kindred.rel_type=='祖先' YIELD dst(edge)",
    "LOOKUP ON character WHERE character.name=='尼可·勒梅' YIELD properties(vertex).eye AS eye",
    "MATCH (n:disease{name:\"下消化道出血\"}) return n.disease.cured_prob",
    "GET SUBGRAPH 2 STEPS FROM \"Tim Duncan\" BOTH like YIELD edges as e\n| UNWIND $-.e as a | YIELD $-.a AS a",
    "MATCH (n:character{name:'蒂尔登·图茨'})-[e]-(n1) return n LIMIT 2",
    "MATCH (v:player {name: \"Rudy Gay\"})-[:serve*0..1]->(n) RETURN n.player.name",
    "MATCH (n:character)-[e:kindred{rel_type:'妻子'}]-(n1) WHERE n.character.name=='弗利蒙·波特' return n1",
    "MATCH (n:character{name:'帕金 (追球手II)'})-[e]-(n1:character) WHERE e.rel_type=='兄妹' return count(n1)",
    "GO FROM \"Kristaps Porzingis\" OVER like YIELD id($$) AS vid | RETURN $-.vid AS dst",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "GO FROM \"Steve Nash\" OVER like REVERSELY YIELD like._dst",
    "GO 1 TO 2 STEPS FROM 'Tony Parker' OVER like YIELD DISTINCT like._dst, like.likeness, $$.player.name",
    "MATCH (n:disease)-[e:has_symptom]->(n1:symptom) WHERE n.disease.name=='足外翻' return n1.symptom.name",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:like{likeness: 90}]->(v)\nRETURN e, v",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst |\nFIND SHORTEST PATH FROM $-.src TO $-.dst OVER like UPTO 5 STEPS YIELD path as p |\nORDER BY $-.p | LIMIT 10",
    "MATCH (n:disease{name:\"下消化道出血\"}) return n.disease.cause",
    "GO FROM \"肌纤维组织炎\" OVER recommend_drug YIELD dst(edge);",
    "GO FROM \"Rajon Rondo\" OVER serve WHERE serve.start_year >= 2013 AND serve.end_year <= 2018\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH (v)-[:serve]->(t)\nWHERE id(t) == 'Pistons'\nRETURN v.player.name AS Name",
    "MATCH (v:player {name: \"Yao Ming\"})-[:serve*0..1]->() RETURN v.player.name",
    "$a = GO FROM 'Danny Green' OVER like YIELD like._src AS src, like._dst AS dst;\nGO FROM $a.dst OVER teammate YIELD $a.src AS src, $a.dst, teammate._dst AS dst",
    "GO FROM \"Tony Parker\" OVER like YIELD like._dst",
    "MATCH(n:player)-[:like]->(m)\n  WHERE n.player.age > 35\n  RETURN DISTINCT id(n) AS id,\n                  count(n) AS count,\n                  sum(floor(n.player.age)) AS sum,\n                  max(m.player.age) AS max,\n                  min(n.player.age) AS min,\n                  avg(distinct n.player.age)+1 AS age,\n                  labels(m) AS lb\n        ORDER BY id, count, max, min\n        SKIP 10 LIMIT 20;",
    "GO FROM \"Dwight Howard\" OVER like, teammate REVERSELY YIELD like.likeness, teammate.start_year, $$.player.name",
    "GO FROM 'Russell Westbrook' OVER serve, like YIELD serve._dst, like._dst",
    "MATCH (n:disease{name:\"呼吸系统疾病伴发的精神障碍\"}) return n.disease.cured_prob",
    "LOOKUP ON character WHERE character.name=='法尔科·艾萨伦' YIELD properties(vertex).eye AS eye",
    "GO FROM \"Manu Ginobili\" OVER * REVERSELY YIELD like.likeness, teammate.start_year, serve.start_year, $$.player.name",
    "LOOKUP ON character WHERE character.name=='密德莉' YIELD properties(vertex).eye AS eye",
    "$var = GO FROM \"Tracy McGrady\" OVER like YIELD like._dst as id; GO FROM $var.id OVER like YIELD like._dst",
    "MATCH (n:character{name:'冈希尔达·尼恩'}) return n.character.marital",
    "LOOKUP ON disease WHERE disease.name == \"高血压\" YIELD properties(vertex).get_prob",
    "YIELD \"Yao Ming\" AS src, \"Tony Parker\" AS dst\n| FIND SHORTEST PATH FROM $-.src TO $-.dst OVER like, serve UPTO 5 STEPS YIELD path as p",
    "MATCH (n:disease)-[]->(n1:drug{name:'全鹿丸'}) return n.disease.name",
    "LOOKUP ON player WHERE player.age > 30.5 YIELD id(vertex) as name, player.age AS Age",
    "GO FROM \"Grant Hill\" OVER like REVERSELY YIELD like._dst",
    "GO FROM \"Tony Parker\" OVER like YIELD id($$) AS vid | RETURN $-.vid AS dst",
    "MATCH (v1:player{name: \"LeBron James\"}) -[r:serve]-> (v2:team{name: \"Cavaliers\"})\nRETURN type(r) AS Type, v2.team.name AS Name",
    "LOOKUP ON character WHERE character.name=='迪芙娜·弗马吉' YIELD properties(vertex).hair AS hair",
    "MATCH (v:player{name: 'Tim Duncan'})-[e]->() RETURN type(e), count(*)",
    "GO FROM \"Manu Ginobili\" OVER * REVERSELY YIELD like.likeness, teammate.start_year, serve.start_year, $$.player.name",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "MATCH (n:character{name:'伊格诺图斯·佩弗利尔'})-[e]-(n1:character{name:'哈利·波特'}) return n1",
    "MATCH (n:character{name:'拉道夫斯·莱斯特兰奇'}) return n.character.born",
    "INSERT EDGE like(likeness) VALUES \"Tim Duncan\"->\"Tim Parker\":(99);\nINSERT EDGE like(likeness) VALUES \"Tim Parker\"->\"Tony Parker\":(90);",
    "GO FROM \"白血病\" OVER recommend_drug YIELD dst(edge);",
    "FETCH PROP ON player \"Boris Diaw\", \"Tony Parker\" YIELD DISTINCT player.name, player.age",
    "GO FROM \"Manu Ginobili\" OVER * REVERSELY YIELD like.likeness, teammate.start_year, serve.start_year, $$.player.name",
    "GO FROM \"Boris Diaw\" OVER serve YIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH (n:character{name:'奥塔莱恩·甘布尔'}) return n.character.gender",
    "MATCH (n:disease{name:\"血稠\"}) return n.disease.cured_prob",
    "YIELD \"Yao Ming\" AS src, \"Tony Parker\" AS dst\n| FIND SHORTEST PATH FROM $-.src TO $-.dst OVER like, serve UPTO 5 STEPS YIELD path as p",
    "FETCH PROP ON player \"Carmelo Anthony\" YIELD player.name, player.age",
    "GO FROM \"Tony Parker\" OVER like REVERSELY YIELD like._dst",
    "match (v:player) return v.player.name, v",
    "MATCH (v1:player{name: \"LeBron James\"}) -[r:serve]-> (v2:team{name: \"Cavaliers\"})\nRETURN type(r) AS Type, v2.team.name AS Name",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst |\nFIND SHORTEST PATH FROM $-.src TO $-.dst OVER like UPTO 5 STEPS YIELD path as p |\nORDER BY $-.p | LIMIT 10",
    "GO FROM \"糖尿病\" OVER cure_department YIELD dst(edge);",
    "MATCH (v:player)-[e:like]->(t) WHERE v.player.name=='Carmelo Anthony'  RETURN v.player.name, v.player.age",
    "FETCH PROP ON like \"Tony Parker\"->\"Tim Duncan\", \"Grant Hill\" -> \"Tracy McGrady\" YIELD edge as relationship |\nYIELD properties($-.relationship)",
    "MATCH (v)-[:serve]->(t)\nWHERE (NOT NOT id(v) == 'Paul Gasol') AND id(v) == 'Paul Gasol'\nRETURN v.player.name AS Name, t.team.name AS Team",
    "MATCH (v:player {name: \"Rudy Gay\"})-[:serve*0..1]->(n) RETURN n.player.name",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Tony Parker\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "MATCH (n:character)-[e:kindred{rel_type:'妻子'}]-(n1) WHERE n.character.name=='乔治·韦斯莱' return n1",
    "FETCH PROP ON like \"Tony Parker\"->\"Tim Duncan\", \"Grant Hill\" -> \"Tracy McGrady\" YIELD edge as relationship |\nYIELD properties($-.relationship)",
    "GO 2 STEPS FROM \"詹姆·小天狼星·波特\" OVER kindred YIELD dst(edge)",
    "GO FROM 'Boris Diaw' OVER serve WHERE $$.team.name CONTAINS \"Haw\"\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH (n:disease)-[]->(n1:drug{name:'龙虎人丹'}) return n.disease.name",
    "GO 1 TO 2 STEPS FROM 'Tony Parker' OVER like YIELD DISTINCT like._dst, like.likeness, $$.player.name",
    "FETCH PROP ON player \"Carmelo Anthony\" YIELD player.name, player.age",
    "LOOKUP ON disease WHERE disease.name == \"糖尿病\" YIELD properties(vertex).get_prob",
    "FETCH PROP ON player \"Boris Diaw\", \"Tony Parker\" YIELD DISTINCT player.name, player.age",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Nobody\",\"Spur\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "GET SUBGRAPH 2 STEPS FROM \"菲菲·拉福尔\" YIELD VERTICES AS nodes, EDGES AS relationships;",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Nobody\",\"Spur\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "MATCH (n:character{name:'赫普兹巴·史密斯'}) return n.character.hair",
    "GO 0 TO 2 STEPS FROM 'Tony Parker' OVER like BIDIRECT YIELD DISTINCT like._dst",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE $$.player.age > 30 and $$.player.age < 40\nYIELD DISTINCT $$.player.age, $$.player.name",
    "GO 3 STEPS FROM \"Tim Duncan\" OVER like,serve\n  WHERE size(labels($$))>0 AND $$.player.age>40\n  yield $$ as v",
    "LOOKUP ON player WHERE player.age > 30.5 YIELD id(vertex) as name, player.age AS Age",
    "MATCH (n:disease)-[e:recommend_eat]->(n1:food) WHERE n.disease.name=='糖尿病' return n1.food.name",
    "match (v:player) return properties(v).name AS name order by name limit 2;",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst |\nFIND ALL PATH FROM $-.src TO $-.dst OVER like UPTO 3 STEPS YIELD path as p",
    "match (player)-[s:serve]->(team) where s.start_year == 2001 return player.player.name AS player, team.team.name AS team",
    "GO FROM \"Tracy McGrady\" OVER like YIELD like._dst",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:serve|like{start_year: 2000}]->(v)\nRETURN e, v",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE $$.player.age > 30 and $$.player.age < 40\nYIELD DISTINCT $$.player.age, $$.player.name",
    "match (v:player) where id(v)==\"Carmelo Anthony\" return properties(v).age;",
    "MATCH (p1)-[:teammate]->(p2)\nRETURN p1.player.name, p2.player.name",
    "MATCH (n:disease{name:\"偏头痛\"}) return n.disease.prevent",
    "go 1 to 4 steps from \"Tim Duncan\" over like yield like.likeness, edge as e",
    "MATCH (v:player{name: 'Rudy Gay'})-[e]->() RETURN type(e), count(*)",
    "GET SUBGRAPH 1 STEPS FROM \"高血压\" YIELD VERTICES AS nodes, EDGES AS all_edges",
    "MATCH (n:disease{name:\"小肠气痛\"}) return n.disease.easy_get",
    "LOOKUP ON player WHERE player.age >= 29 YIELD id(vertex) as name, player.age AS Age",
    "MATCH (n:character{name:'特罗卡'}) return n.character.species",
    "MATCH p = shortestPath( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.age > 45 AND b.team.name == 'Spurs'\n  RETURN length(p)",
    "FETCH PROP ON player \"Jason Kidd\" YIELD player.name, player.age",
    "MATCH (:player{name:\"Tim Duncan\"})-[e:like*2..3]->()\nRETURN *",
    "MATCH (:player{name:\"Tim Duncan\"})-[e:like*2..3]->()\nRETURN *",
    "LOOKUP ON character WHERE character.name=='诺比·利奇' YIELD properties(vertex).gender AS gender",
    "GO FROM \"Tim Duncan\" OVER like LIMIT 1;",
    "GO 0 TO 2 STEPS FROM 'Tony Parker' OVER like BIDIRECT YIELD DISTINCT like._dst",
    "MATCH (v:player)\nWHERE v.player.name>\"Grant Hill\" and  v.player.name<=\"Yao Ming\"\nRETURN v",
    "MATCH (n:disease)-[]->(n1:drug{name:'四物颗粒'}) return n.disease.name",
    "FETCH PROP ON disease \"高血压\" YIELD properties(vertex).cured_prob as prob",
    "GO 2 STEPS FROM \"温迪克·温瑞迪安\" OVER kindred YIELD dst(edge)",
    "MATCH (n:character{name:'扎卡赖斯·史密斯'}) return n.character.hair",
    "GO FROM \"Tony Parker\" OVER like REVERSELY YIELD like._dst",
    "GO 1 STEPS FROM 'Tim Duncan' OVER like YIELD like._dst as id | GO FROM $-.id OVER serve YIELD serve._dst",
    "MATCH (n:player) WHERE id(n) == \"Boris Diaw\" RETURN n;",
    "LOOKUP ON character WHERE character.name=='女巫追捕小分队队长' YIELD properties(vertex).blood AS blood",
    "GO 1 TO 2 STEPS FROM 'Tony Parker' OVER like YIELD DISTINCT like._dst, like.likeness, $$.player.name",
    "LOOKUP ON like WHERE like.grade == 666 YIELD src(edge) as src, dst(edge) as dst",
    "MATCH (v:player{name: \"abc\"}) -[:serve*..3]-> ()\nRETURN *",
    "GO FROM 'Tim Duncan' OVER like WHERE properties($$).age > 38 YIELD edge as e,  $$ as dst",
    "MATCH (n:character{name:'赫尔曼·温廷汉姆'}) return n.character.born",
    "MATCH (:player{name: \"Tim Duncan\"})-[e1:like]->()-[e2:serve*0..3]->()<-[e3:serve]-(v)\nRETURN count(v)",
    "MATCH (v:player{name: 'Tim Duncan'})-[e]->() RETURN type(e), count(*)",
    "MATCH (v:player)-[e:like]->(v2)\nWHERE id(v) == \"Tim Duncan\"\nRETURN DISTINCT properties(e) as props, e",
    "MATCH (v:player{name: 'Tim Duncan'}) return v.player.name AS name",
    "MATCH (n:disease{name:\"三叉神经痛\"}) return n.disease.get_prob",
    "MATCH (n:disease{name:\"乳头肌功能不全\"}) return n.disease.easy_get",
    "MATCH (n:disease{name:\"脐疝\"}) return n.disease.cure_lasttime",
    "MATCH (n:character{name:'希思科特·巴巴里'})-[e:belong_to]-(n1:group) return count(n1)",
    "MATCH (n:character{name:'弗雷德·韦斯莱'})-[e]-(n1:group) return count(n1)",
    "GO 0 TO 2 STEPS FROM 'Tony Parker' OVER like BIDIRECT YIELD DISTINCT like._dst",
    "MATCH (n:character{name:'威尔米娜·塔夫特'})-[e:belong_to]-(n1:group) return n1",
    "GO FROM \"戊型病毒性肝炎\" OVER accompany_with YIELD dst(edge);",
    "MATCH (n:character{name:'马琳·麦金农'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (n:character)-[e:kindred{rel_type:'母亲'}]-(n1) WHERE n.character.name=='吉德罗·洛哈特的姐姐' return n1",
    "FETCH PROP ON player \"Carmelo Anthony\" YIELD player.name, player.age",
    "GO FROM \"急性乳腺炎\" OVER cure_department YIELD dst(edge);",
    "MATCH (v)-[:serve]->(t)\nWHERE (NOT NOT id(v) == 'Paul Gasol') AND id(v) == 'Paul Gasol'\nRETURN v.player.name AS Name, t.team.name AS Team",
    "MATCH p = shortestPath( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.age > 45 AND b.team.name == 'Spurs'\n  RETURN length(p)",
    "GO FROM \"LaMarcus Aldridge\" OVER * YIELD $$.team.name, $$.player.name",
    "MATCH (n:disease)-[e:accompany_with]->(n1:disease{name:'高血压'}) return n.disease.name",
    "GO FROM \"LaMarcus Aldridge\" OVER * YIELD $$.team.name, $$.player.name",
    "MATCH (n:disease{name:\"幼年型慢性关节炎及其伴发的葡萄膜炎\"}) return n.disease.cured_prob",
    "match (v:player) return properties(v).name AS name order by name limit 2;",
    "MATCH (n:disease{name:\"小儿糖原贮积病Ⅳ型\"})-[:cure_way]->(n1) return n1",
    "MATCH (v:player)-[e:like]->(v2)\nWHERE id(v) == \"Tim Duncan\"\nRETURN DISTINCT properties(e) as props, e",
    "GO FROM 'Tim Duncan' OVER serve, like bidirect YIELD distinct dst(edge) as dst",
    "MATCH (v:player)-[e:like]->(t) WHERE v.player.name=='Carmelo Anthony'  RETURN v.player.name, v.player.age",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:like{likeness: 90}]->(v)\nRETURN e, v",
    "LOOKUP ON player WHERE player.age == 40 YIELD player.name, player.age + 1",
    "FIND SHORTEST PATH FROM \"托比亚·斯内普\" TO \"帕金 (找球手)\" OVER * YIELD path AS p",
    "INSERT EDGE like(likeness) VALUES \"Tim Duncan\"->\"Tim Parker\":(99);\nINSERT EDGE like(likeness) VALUES \"Tim Parker\"->\"Tony Parker\":(90);",
    "FETCH PROP ON player \"Carmelo Anthony\" YIELD player.name, player.age",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst |\nFIND SHORTEST PATH FROM $-.src TO $-.dst OVER like UPTO 5 STEPS YIELD path as p |\nORDER BY $-.p | LIMIT 10",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "MATCH (n:character{name:'塔奎因·麦克塔维什的邻居'}) return n.character.species",
    "MATCH (:player{name:\"Tim Duncan\"})-[e:like*2..3{likeness: 90}]->(v)\nRETURN e, v",
    "GO FROM \"Tim Duncan\" OVER like YIELD like._dst AS dst | YIELD DISTINCT $-.dst AS dst",
    "LOOKUP ON player WHERE player.age > 30.5 YIELD id(vertex) as name, player.age AS Age",
    "MATCH (v:player)\nWHERE v.player.name>\"Grant Hill\" and  v.player.name<=\"Yao Ming\"\nRETURN v",
    "MATCH (a:player)\nWHERE id(a)=='Tim Duncan'\nMATCH (a)-[:like]-(b)\nRETURN count(*) AS cnt",
    "MATCH (v:player {name: \"Rudy Gay\"})-[:serve*0..1]->(n) RETURN n.player.name",
    "MATCH (n:character{name:'西弗勒斯·斯内普'}) return n.character.hair",
    "GO FROM \"遗传性凝血因子ⅩⅢ缺乏\" OVER cure_department YIELD dst(edge);",
    "GO FROM 'Boris Diaw' OVER serve WHERE $$.team.name CONTAINS \"Haw\"\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "GO FROM \"慢性淋巴细胞性白血病\" OVER recommend_drug YIELD dst(edge);",
    "MATCH (n:character{name:'亨利七世'})-[e:kindred{rel_type:'孙女'}]-(n1) return n1",
    "match (v:player)-[e:like{likeness:-1}]->()  RETURN e",
    "MATCH (v:player {name: \"DeAndre Jordan\"}) RETURN v",
    "MATCH (a:player)\nWHERE id(a)=='Tim Duncan'\nMATCH (a)-[:like]-(b)\nRETURN count(*) AS cnt",
    "GO FROM \"白血病\" OVER cure_department YIELD dst(edge);",
    "MATCH (n:character{name:'莫恩'})-[e:belong_to]-(n1:group) return n1",
    "FETCH PROP ON player \"Jason Kidd\" YIELD player.name, player.age",
    "MATCH (n:disease)-[]->(n1:drug{name:'眼氨肽滴眼液'}) return n.disease.name",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v2) == 'Tim Duncan'\nRETURN COUNT(*)",
    "GO 3 STEPS FROM \"Tim Duncan\" OVER like,serve\n  WHERE size(labels($$))>0 AND $$.player.age>40\n  yield $$ as v",
    "match (player)-[s:serve]->(team) where s.start_year == 2001 return player.player.name AS player, team.team.name AS team",
    "MATCH (v:player{name: \"abc\"}) -[:serve*..3]-> ()\nRETURN *",
    "LOOKUP ON like WHERE like.grade == 666 YIELD src(edge) as src, dst(edge) as dst",
    "LOOKUP ON like WHERE like.grade == 666 YIELD src(edge) as src, dst(edge) as dst",
    "match (v:player)-[e:like{likeness:-1}]->()  RETURN e",
    "MATCH (n:character{name:'鲁道夫·布兰德'}) return n.character.species",
    "MATCH (n:character{name:'哈维·瑞吉比特'})-[e:belong_to]-(n1:group) return n1",
    "GO 0 TO 2 STEPS FROM 'Tony Parker' OVER like BIDIRECT YIELD DISTINCT like._dst",
    "MATCH (v:player)\nWHERE v.player.name>\"Grant Hill\" and  v.player.name<=\"Yao Ming\"\nRETURN v",
    "$v1 = YIELD \"Ray Allen\" AS a;\nFETCH PROP ON player $v1.a YIELD player.name AS name",
    "MATCH (n:character)-[e:kindred{rel_type:'姐姐'}]-(n1) WHERE n.character.name=='莫迪丝蒂·拉布诺' return n1.character.name",
    "GO FROM \"Paul Gasol\" OVER * YIELD like._dst, serve._dst, teammate._dst",
    "MATCH (n:character)-[e:kindred{rel_type:'妻子'}]-(n1) WHERE n.character.name=='蒂尔登·图茨' return n1.character.blood",
    "MATCH (n:disease)-[e:accompany_with]->(n1:disease{name:'糖尿病'}) return n.disease.name",
    "GO FROM \"无脉络膜症\" OVER cure_department YIELD dst(edge);",
    "match (v:player) return v.player.name, v",
    "FETCH PROP ON player 'Tony Parker' YIELD player.name as Name |\nGO FROM $-.Name OVER like YIELD like._dst",
    "MATCH (n:character)-[e:kindred{rel_type:'丈夫'}]-(n1) WHERE n.character.name=='芙蓉·德拉库尔' return n1",
    "MATCH p = ()-[:like*2]->(v:player) WHERE id(v) == 'Grant Hill' RETURN p",
    "GO FROM \"Paul Gasol\" OVER * YIELD like._dst, serve._dst, teammate._dst",
    "MATCH (n:disease)-[]->(n1:cure{name:'手术治疗'}) return count(n)",
    "LOOKUP ON player WHERE player.age >= 29 YIELD id(vertex) as name, player.age AS Age",
    "match p= (v:player)-[e:like*1..2]->(d) where v.player.age > 20 return e",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan'\n  WHERE like.likeness > 95 AND like.likeness < 100\n  YIELD vertices as nodes, edges as relationships",
    "MATCH (n:disease{name:\"胰腺囊腺瘤和囊腺癌\"}) return n.disease.cured_prob",
    "LOOKUP ON player\nWHERE player.name == 'Tim Duncan'\nYIELD player.age as age, id(vertex) as vid\n| UNWIND $-.vid as a | YIELD $-.a AS a",
    "MATCH (n:character{name:'希思科特·巴巴里'}) return n.character.species",
    "match (v:player)-[e:like{likeness:-1}]->()  RETURN e",
    "MATCH (n:disease{name:\"母儿ABO血型不合\"}) return n.disease.prevent",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Tony Parker\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "MATCH (v:player{name: \"Damian Lillard\"})-[:like]-(v2)--(v3)\nWITH v3, v3.player.age AS age\nRETURN v3, age ORDER BY age LIMIT 3",
    "MATCH (:player{name:\"Kyrie Irving\"})-[e:like*2..3]->()\nRETURN *",
    "MATCH (n:character{name:'罗伊斯顿·埃德温德'}) return n.character.gender",
    "MATCH (v:player) WITH (v)-[:teammate]->() AS p RETURN p",
    "GO 3 STEPS FROM \"Tim Duncan\" OVER like,serve\n  WHERE size(labels($$))>0 AND $$.player.age>40\n  yield $$ as v",
    "GO FROM \"霍奇金病\" OVER no_eat YIELD dst(edge);",
    "MATCH (n:disease{name:\"霍奇金病\"}) return n.disease.cause",
    "MATCH (n:disease{name:\"神经棘红细胞增多症\"}) return n.disease.easy_get",
    "match (v:player)-[e:like{likeness:-1}]->()  RETURN e",
    "GO FROM \"戊型病毒性肝炎\" OVER no_eat YIELD dst(edge);",
    "go 1 to 4 steps from \"Tim Duncan\" over like yield like.likeness, edge as e",
    "MATCH (n:disease{name:\"岩骨斜坡脑膜瘤\"}) return n.disease.cure_lasttime",
    "MATCH (p1)-[:teammate]->(p2)\nRETURN p1.player.name, p2.player.name",
    "MATCH (v1:player{name: \"LeBron James\"}) -[r:serve]-> (v2:team{name: \"Cavaliers\"})\nRETURN type(r) AS Type, v2.team.name AS Name",
    "MATCH (n:disease{name:\"赤丝虬脉\"}) return n.disease.cured_prob",
    "MATCH (n:character{name:'默西·刘易斯'}) return n.character.species",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "GO FROM 'Tim Duncan' OVER like bidirect WHERE like.likeness > 90\nYIELD $^.player.name, like._dst, $$.player.name, like.likeness",
    "GO FROM \"外阴银屑病\" OVER recommend_drug YIELD dst(edge);",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "GO FROM \"Paul Gasol\" OVER * YIELD like._dst, serve._dst, teammate._dst",
    "GO FROM \"Boris Diaw\" OVER like YIELD like._dst",
    "match (v:player)-[e:like{likeness:-1}]->()  RETURN e",
    "GO 3 STEPS FROM \"Tim Duncan\" OVER like,serve\n  WHERE size(labels($$))>0 AND $$.player.age>40\n  yield $$ as v",
    "MATCH (v:player {name: \"Yao Ming\"})-[:serve*0..1]->() RETURN v.player.name",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "MATCH (v:player) WHERE [t in [v] | (v)-[:like]->(t)] RETURN v.player.name AS name",
    "LOOKUP ON player\nWHERE player.name == 'Tim Duncan'\nYIELD player.age as age, id(vertex) as vid\n| UNWIND $-.vid as a | YIELD $-.a AS a",
    "GO FROM \"Rajon Rondo\" OVER serve WHERE serve.start_year >= 2013 AND serve.end_year <= 2018\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:serve|like{start_year: 2000}]-(v)\nRETURN e, v",
    "MATCH (p1)-[:teammate]->(p2)\nRETURN p1.player.name, p2.player.name",
    "MATCH (n:disease{name:\"急性乳腺炎\"}) return n.disease.symptom",
    "GO FROM \"戊型病毒性肝炎\" OVER cure_department YIELD dst(edge);",
    "LOOKUP ON disease WHERE disease.name == \"霍奇金病\" YIELD properties(vertex).prevent",
    "MATCH (n:disease{name:\"腹腔干动脉瘤\"}) return n.disease.prevent",
    "FETCH PROP ON like \"Tony Parker\"->\"Tim Duncan\", \"Grant Hill\" -> \"Tracy McGrady\" YIELD edge as relationship |\nYIELD properties($-.relationship)",
    "MATCH (n:disease{name:\"气虚血瘀证\"}) return n.disease.cure_lasttime",
    "MATCH (n:disease{name:\"肾上腺素能依赖性尖端扭转性室性心动过速\"}) return n.disease.cured_prob",
    "MATCH (n:character{name:'马尔科姆'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (n:character{name:'卡桑德拉·瓦布拉斯基'})-[e]-(n1:group) return count(n1)",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Tony Parker\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "GO FROM \"Boris Diaw\" OVER like YIELD like._dst",
    "MATCH (n:character{name:'卢克丽霞·布莱克'})-[e:kindred{rel_type:'侄女'}]-(n1) return n1",
    "MATCH (v:player)-[e:like]->(v2) WHERE none_direct_dst(e) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *\nMINUS\nMATCH (v:player)-[e:like]->(v2) WHERE id(v2) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *",
    "MATCH (:player{name: \"Vince Carter\"})-[e1:like]->()-[e2:serve*0..3]->()<-[e3:serve]-(v)\nRETURN count(v)",
    "MATCH (n:character{name:'维奥莱塔·伯斯德'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (n:character)-[e:kindred{rel_type:'父亲'}]-(n1) WHERE n.character.name=='多洛雷斯·乌姆里奇' return n1",
    "match (player)-[s:serve]->(team) where s.start_year == 2001 return player.player.name AS player, team.team.name AS team",
    "MATCH (v:player{name:\"Giannis Antetokounmpo\"}) RETURN v.name AS vname",
    "MATCH (n:character{name:'卡桑德拉·瓦布拉斯基'}) return n.character.species",
    "match (v:player) return v.player.name, v",
    "GO FROM 'Tim Duncan' OVER like bidirect WHERE like.likeness > 90\nYIELD $^.player.name, like._dst, $$.player.name, like.likeness",
    "GO FROM \"Kristaps Porzingis\" OVER like YIELD id($$) AS vid | RETURN $-.vid AS dst",
    "MATCH (n:disease)-n->(n1:cure{name:'物理治疗'}) return count(n)",
    "LOOKUP ON player\nWHERE player.name == 'Tim Duncan'\nYIELD player.age as age, id(vertex) as vid\n| UNWIND $-.vid as a | YIELD $-.a AS a",
    "MATCH (n:character)-[e:kindred{rel_type:'母亲'}]-(n1) WHERE n.character.name=='玛姬·德思礼' return n1",
    "GO FROM \"Tony Parker\" OVER like YIELD id($$) AS vid | RETURN $-.vid AS dst",
    "GO 3 STEPS FROM \"Tim Duncan\" OVER like,serve\n  WHERE size(labels($$))>0 AND $$.player.age>40\n  yield $$ as v",
    "MATCH (n:disease{name:\"酒精中毒性神经疾病\"}) return n.disease.cause",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "FETCH PROP ON player 'Boris Diaw' YIELD vertex as node",
    "LOOKUP ON player WHERE player.age > 30.5 YIELD id(vertex) as name, player.age AS Age",
    "FETCH PROP ON player \"Carmelo Anthony\" YIELD player.name, player.age",
    "FETCH PROP ON player \"Boris Diaw\", \"Tony Parker\" YIELD DISTINCT player.name, player.age",
    "LOOKUP ON disease WHERE disease.name == \"霍奇金病\" YIELD properties(vertex).get_prob",
    "MATCH p = shortestPath( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.age > 45 AND b.team.name == 'Spurs'\n  RETURN length(p)",
    "FETCH PROP ON player \"Grant Hill\" YIELD player.name, player.age",
    "GO FROM 'Tim Duncan' OVER serve, like bidirect YIELD distinct dst(edge) as dst",
    "MATCH (n:disease{name:\"足外翻\"}) return n.disease.get_prob",
    "GO FROM \"LaMarcus Aldridge\" OVER * YIELD $$.team.name, $$.player.name",
    "MATCH (n:disease{name:\"小儿莫拉雷脑膜炎\"}) return n.disease.cured_prob",
    "MATCH (a:player)\nWHERE id(a)=='Tim Duncan'\nMATCH (a)-[:like]-(b)\nRETURN count(*) AS cnt",
    "MATCH (:player{name: \"Tim Duncan\"})-[e:like*2..3]->(v)\nRETURN e, v",
    "MATCH p = shortestPath( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.age > 45 AND b.team.name == 'Spurs'\n  RETURN length(p)",
    "MATCH (n:player) WHERE id(n) == \"Boris Diaw\" RETURN n;",
    "GO FROM \"纵隔非霍奇金淋巴瘤\" OVER recommend_drug YIELD dst(edge);",
    "FIND SHORTEST PATH FROM \"赫敏·格兰杰\" TO \"哈利·波特\" OVER * YIELD path AS p",
    "GO FROM \"疰夏\" OVER cure_department YIELD dst(edge);",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst |\nFIND SHORTEST PATH FROM $-.src TO $-.dst OVER like UPTO 5 STEPS YIELD path as p |\nORDER BY $-.p | LIMIT 10",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v3) == 'Spurs' AND id(v1) == 'Tony Parker'\nRETURN v1, v2, v3",
    "MATCH (n:character{name:'玛丽·卢·巴瑞波恩'})-[e]-(n1) WHERE e.rel_type=='养女' return n1",
    "MATCH (n:disease{name:\"肱骨内髁骨折\"}) return n.disease.cure_lasttime",
    "MATCH (n:character{name:'西莫·斐尼甘'})-[e:learn_from]-(n1:college) return n1",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "MATCH p2=(:player{name:\"Tim Duncan\"})-[e:like*1..2]-(:player{name:\"Tim Duncan\"})\nRETURN e.likeness AS e1",
    "GO 1 STEPS FROM 'Tim Duncan' OVER like YIELD like._dst as id | GO FROM $-.id OVER serve YIELD serve._dst",
    "MATCH (n:character{name:'杰基·杰尼根'})-[]-(n1:group) return n1",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan'\n  WHERE like.likeness > 95 AND like.likeness < 100\n  YIELD vertices as nodes, edges as relationships",
    "MATCH (:player{name: \"Tim Duncan\"})-[e:like*2..3]->(v)\nRETURN e, v",
    "MATCH (n:player) WHERE id(n) == \"Boris Diaw\" RETURN n;",
    "GO FROM 'Tim Duncan' OVER like WHERE properties($$).age > 38 YIELD edge as e,  $$ as dst",
    "$var = GO FROM \"Tracy McGrady\" OVER like YIELD like._dst as id; GO FROM $var.id OVER like YIELD like._dst",
    "LOOKUP ON character WHERE character.name=='利奥波迪娜·斯梅绥克' YIELD properties(vertex).species AS species",
    "MATCH (v:player)-[e:like]->(v2)\nWHERE id(v) == \"Tim Duncan\"\nRETURN DISTINCT properties(e) as props, e",
    "MATCH (n:character{name:'赫伯特·博克'})-[e]-(n1) WHERE e.rel_type=='妻子' return n1",
    "MATCH (n:character{name:'马尔科姆'}) return n.character.blood",
    "MATCH (n:character{name:'巴希达·巴沙特'})-[e:learn_from]-(n1:college) return n1.character.name",
    "GO FROM \"霍奇金病\" OVER recommend_eat YIELD dst(edge);",
    "MATCH (n:character)-[e]-(n1:group{name:'普威特家族'}) return n",
    "MATCH (n:character{name:'劳拉·马德莱'}) return n.character.gender",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v3) == 'Spurs' AND id(v1) == 'Tony Parker'\nRETURN v1, v2, v3",
    "$a = GO FROM 'Danny Green' OVER like YIELD like._src AS src, like._dst AS dst;\nGO FROM $a.dst OVER teammate YIELD $a.src AS src, $a.dst, teammate._dst AS dst",
    "FETCH PROP ON player \"Jason Kidd\" YIELD player.name, player.age",
    "LOOKUP ON like WHERE like.grade == 666 YIELD src(edge) as src, dst(edge) as dst",
    "GO FROM \"Tim Duncan\" OVER like YIELD like._dst AS dst | YIELD DISTINCT $-.dst AS dst",
    "MATCH (:player{name:\"Kyrie Irving\"})-[e:serve|like*2..3]-(v)\nRETURN count(v)",
    "MATCH (v)-[:serve]->(t)\nWHERE id(t) == 'Pistons'\nRETURN v.player.name AS Name",
    "GO FROM \"Tony Parker\" OVER like YIELD like._dst",
    "MATCH (n:character)-[e:kindred{rel_type:'父亲'}]-(n1) WHERE n.character.name=='吉德罗·洛哈特的姐姐' return n1",
    "LOOKUP ON player\nWHERE player.name == 'Tim Duncan'\nYIELD player.age as age, id(vertex) as vid\n| UNWIND $-.vid as a | YIELD $-.a AS a",
    "GO FROM \"Tony Parker\" OVER like YIELD like._dst",
    "MATCH (n:character{name:'特拉弗斯'})-[e:belong_to]-(n1:group) return n1",
    "$var = GO FROM \"Tracy McGrady\" OVER like YIELD like._dst as id; GO FROM $var.id OVER like YIELD like._dst",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan' IN like, serve YIELD vertices as nodes, edges as relationships",
    "FETCH PROP ON player 'Tony Parker' YIELD player.name as Name |\nGO FROM $-.Name OVER like YIELD like._dst",
    "YIELD \"Yao Ming\" AS src, \"Tony Parker\" AS dst\n| FIND SHORTEST PATH FROM $-.src TO $-.dst OVER like, serve UPTO 5 STEPS YIELD path as p",
    "MATCH (n:disease)-[e:accompany_with]->(n1:disease{name:'高血压'}) return n.disease.name",
    "MATCH (:player{name:\"Tim Duncan\"})<-[e:like*2..3{likeness: 90}]-(v)\nRETURN e, v",
    "GO FROM \"Boris Diaw\" OVER serve YIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "MATCH (v:player)\nWHERE v.player.name>\"Grant Hill\" and  v.player.name<=\"Yao Ming\"\nRETURN v",
    "MATCH (n:disease)-[e:recommend_eat]->(n1:food) WHERE n.disease.name=='心脏病' return n1.food.name",
    "GO FROM 'Tim Duncan' OVER like bidirect WHERE like.likeness > 90\nYIELD $^.player.name, like._dst, $$.player.name, like.likeness",
    "MATCH (n:disease{name:\"霍奇金病\"}) return n.disease.cure_lasttime",
    "MATCH (n:character{name:'阿马利洛·莱斯托阿特'}) return n.character.hair",
    "MATCH (n:disease{name:\"肾上腺素能依赖性尖端扭转性室性心动过速\"}) return n.disease.symptom",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan'\n  WHERE like.likeness > 95 AND like.likeness < 100\n  YIELD vertices as nodes, edges as relationships",
    "GO 2 STEPS FROM \"塞德瑞拉·布莱克\" OVER kindred WHERE kindred.rel_type=='儿子' YIELD dst(edge)",
    "MATCH (v:player) WHERE [t in [v] | (v)-[:like]->(t)] RETURN v.player.name AS name",
    "GO 1 TO 2 STEPS FROM 'Tony Parker' OVER like YIELD DISTINCT like._dst, like.likeness, $$.player.name",
    "MATCH (n:character)-[e:kindred{rel_type:'父亲'}]-(n1) WHERE n.character.name=='扎卡赖斯·史密斯' return n1",
    "match (v:player) return properties(v).name AS name order by name limit 2;",
    "GET SUBGRAPH 2 STEPS FROM \"Tim Duncan\" BOTH like YIELD edges as e\n| UNWIND $-.e as a | YIELD $-.a AS a",
    "match p= (v:player)-[e:like*1..2]->(d) where v.player.age > 20 return e",
    "GET SUBGRAPH 2 STEPS FROM \"亨利八世\" YIELD VERTICES AS nodes, EDGES AS relationships;",
    "MATCH (n:character)-[e:kindred{rel_type:'丈夫'}]-(n1) WHERE n.character.name=='维奥莱塔·伯斯德' return n1",
    "GO FROM \"戊型病毒性肝炎\" OVER accompany_with YIELD dst(edge);",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Nobody\",\"Spur\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "MATCH (v:player) WITH (v)-[:teammate]->() AS p RETURN p",
    "MATCH p2=(:player{name:\"Tim Duncan\"})-[e:like*1..2]-(:player{name:\"Tim Duncan\"})\nRETURN e.likeness AS e1",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "GO FROM \"高血压\" OVER cure_department YIELD dst(edge);",
    "MATCH (v:player{name: \"abc\"}) -[:serve*..3]-> ()\nRETURN *",
    "GO FROM \"Manu Ginobili\" OVER * REVERSELY YIELD like.likeness, teammate.start_year, serve.start_year, $$.player.name",
    "MATCH (n:disease)-[e:accompany_with]->(n1:disease{name:'糖尿病'}) return n.disease.name",
    "GO FROM \"Tony Parker\" OVER like YIELD like._dst",
    "MATCH (v:player) WHERE [t in [v] | (v)-[:like]->(t)] RETURN v.player.name AS name",
    "GO 3 STEPS FROM \"Tim Duncan\" OVER like,serve\n  WHERE size(labels($$))>0 AND $$.player.age>40\n  yield $$ as v",
    "GO FROM \"Rajon Rondo\" OVER serve WHERE serve.start_year >= 2013 AND serve.end_year <= 2018\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "GO FROM \"Kristaps Porzingis\" OVER like YIELD id($$) AS vid | RETURN $-.vid AS dst",
    "MATCH (n:disease{name:\"老年人恶性心包积液\"}) return n.disease.symptom",
    "LOOKUP ON player WHERE player.age == 40 YIELD player.name, player.age + 1",
    "GO 1 TO 2 STEPS FROM 'Tony Parker' OVER like YIELD DISTINCT like._dst, like.likeness, $$.player.name",
    "MATCH(n:player)-[:like]->(m)\n  WHERE n.player.age > 35\n  RETURN DISTINCT id(n) AS id,\n                  count(n) AS count,\n                  sum(floor(n.player.age)) AS sum,\n                  max(m.player.age) AS max,\n                  min(n.player.age) AS min,\n                  avg(distinct n.player.age)+1 AS age,\n                  labels(m) AS lb\n        ORDER BY id, count, max, min\n        SKIP 10 LIMIT 20;",
    "MATCH (n:character{name:'芙蓉·德拉库尔'})-[e:learn_from]-(n1:college) return n1.character.name",
    "MATCH (n:disease)-[e:accompany_with]->(n1:disease{name:'脾虚泄泻'}) return n.disease.name",
    "MATCH (v1) -[:like]-> (v2) -[:like]-> (v3)\nWHERE id(v1) == \"Tim Duncan\"\nRETURN v1.player.name AS Player, v2.player.name AS Friend, v3.player.name AS FoF",
    "MATCH (a:player)\nWHERE id(a)=='Tim Duncan'\nMATCH (a)-[:like]-(b)\nRETURN count(*) AS cnt",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v2) == 'Tim Duncan'\nRETURN COUNT(*)",
    "FETCH PROP ON player \"Grant Hill\" YIELD player.name, player.age",
    "MATCH (v:player) WITH (v)-[:teammate]->() AS p RETURN p",
    "MATCH (v)-[:serve]->(t)\nWHERE (NOT NOT id(v) == 'Paul Gasol') AND id(v) == 'Paul Gasol'\nRETURN v.player.name AS Name, t.team.name AS Team",
    "GO FROM \"Carmelo Anthony\" OVER like YIELD like._dst| YIELD COUNT(*)",
    "match (player)-[s:serve]->(team) where s.start_year == 2001 return player.player.name AS player, team.team.name AS team",
    "MATCH (v:player)-[e:like]->(v2)\nWHERE id(v) == \"Tim Duncan\"\nRETURN DISTINCT properties(e) as props, e",
    "match (v:player) return v.player.name, v",
    "GO FROM \"Tim Duncan\" OVER like YIELD like._dst AS dst | YIELD DISTINCT $-.dst AS dst",
    "MATCH (n:disease{name:\"幼年型慢性关节炎及其伴发的葡萄膜炎\"}) return n.disease.get_prob",
    "MATCH (n:disease{name:\"迁延性昏迷\"}) return n.disease.cure_lasttime",
    "MATCH (n:character{name:'帕金 (找球手)'})-[e]-(n1) return n1",
    "MATCH (n:character{name:'奥托·奥博梅尔'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (v:player)\nWHERE v.player.name>\"Grant Hill\" and  v.player.name<=\"Yao Ming\"\nRETURN v",
    "MATCH (v:player{name:\"Giannis Antetokounmpo\"}) RETURN v.name AS vname",
    "FETCH PROP ON player \"Tony Parker\" YIELD player.name, player.age",
    "$a = GO FROM 'Danny Green' OVER like YIELD like._src AS src, like._dst AS dst;\nGO FROM $a.dst OVER teammate YIELD $a.src AS src, $a.dst, teammate._dst AS dst",
    "GET SUBGRAPH 2 STEPS FROM \"鲁道夫·布兰德\" YIELD VERTICES AS nodes, EDGES AS relationships;",
    "MATCH (n:character{name:'周雅'}) return n.character.hair",
    "MATCH (n:character)-[e]-(n1:college{name:'斯莱特林学院'}) return n",
    "match (v:player{age: 1+19}) RETURN v",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Nobody\",\"Spur\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "MATCH (n:disease{name:\"肌纤维组织炎\"}) return n.disease.cure_lasttime",
    "MATCH (v:team{name:\"Spurs\"})--(v2)\nRETURN v2 AS Player",
    "MATCH (n:character{name:'弗雷德·韦斯莱'}) return n.character.hair",
    "GO FROM \"Tony Parker\" OVER like YIELD like._dst",
    "MATCH (n:disease{name:\"蝶骨嵴脑膜瘤眼部病变\"}) return n.disease.prevent",
    "MATCH (v:player{name: \"abc\"}) -[:serve*..3]-> ()\nRETURN *",
    "MATCH (n:disease{name:\"特发性非硬化性门脉高压综合征\"}) return n.disease.cure_lasttime",
    "GO FROM \"Dwight Howard\" OVER like, teammate REVERSELY YIELD like.likeness, teammate.start_year, $$.player.name",
    "MATCH p2=(:player{name:\"Tim Duncan\"})-[e:like*1..2]-(:player{name:\"Tim Duncan\"})\nRETURN e.likeness AS e1",
    "GO FROM \"Rajon Rondo\" OVER serve WHERE serve.start_year >= 2013 AND serve.end_year <= 2018\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH (n:character{name:'罗恩·韦斯莱'})-[e:kindred{rel_type:'妻子'}]-(n1) return n1",
    "GO FROM \"Tony Parker\" OVER like YIELD like._dst",
    "GO FROM 'Boris Diaw' OVER serve WHERE $$.team.name CONTAINS \"Haw\"\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH p = (v:player{name: \"Cory Joseph\"})-[e:like]-(v2)\nRETURN p",
    "MATCH (v:player{name: 'Tim Duncan'})-[e]->() RETURN type(e), count(*)",
    "GO FROM \"细菌性阴道病\" OVER recommend_drug YIELD dst(edge);",
    "FETCH PROP ON player \"Grant Hill\" YIELD player.name, player.age",
    "MATCH (n:character{name:'鲁道夫·布兰德'})-[e]-(n1) return n LIMIT 2",
    "MATCH (v:player {name: \"Yao Ming\"})-[:serve*0..1]->() RETURN v.player.name",
    "FETCH PROP ON player \"Jason Kidd\" YIELD player.name, player.age",
    "LOOKUP ON player\nWHERE player.name == 'Tim Duncan'\nYIELD player.age as age, id(vertex) as vid\n| UNWIND $-.vid as a | YIELD $-.a AS a",
    "GO FROM \"Tony Parker\" OVER like REVERSELY YIELD like._dst",
    "MATCH (n:character{name:'帕金 (击球手II)'})-[e:kindred{rel_type:'父亲'}]-(n1) return n1",
    "FIND SHORTEST PATH FROM \"吉米·珀克斯\" TO \"塞缪尔·G·寇豪格\" OVER * YIELD path AS p",
    "MATCH (n:character{name:'拉道夫斯·莱斯特兰奇'})-[e:kindred{rel_type:'后裔'}]-(n1) return n1",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v3) == 'Spurs' AND id(v1) == 'Tony Parker'\nRETURN v1, v2, v3",
    "MATCH (n:character{name:'阿不思·西弗勒斯·波特'})-[e]-(n1) WHERE e.rel_type=='妹妹' return n1",
    "GO FROM \"Tim Duncan\" OVER like LIMIT 1;",
    "match (v:player{age: 1+19}) RETURN v",
    "FETCH PROP ON player \"Grant Hill\" YIELD player.name, player.age",
    "match (v:player) where id(v)==\"Carmelo Anthony\" return properties(v).age;",
    "MATCH (v1) -[:like]-> (v2) -[:like]-> (v3)\nWHERE id(v1) == \"Tim Duncan\"\nRETURN v1.player.name AS Player, v2.player.name AS Friend, v3.player.name AS FoF",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan' IN like, serve YIELD vertices as nodes, edges as relationships",
    "GO FROM \"Tim Duncan\" OVER like LIMIT 1;",
    "MATCH (n:character)-[e:kindred{rel_type:'妻子'}]-(n1) WHERE n.character.name=='西格纳斯·布莱克二世' return n1",
    "GET SUBGRAPH 1 STEPS FROM \"心悸\" YIELD VERTICES AS nodes, EDGES AS all_edges;",
    "FETCH PROP ON player \"Grant Hill\" YIELD player.name, player.age",
    "FETCH PROP ON player \"Tony Parker\" YIELD player.name, player.age",
    "MATCH (v:player{name: \"abc\"}) -[:serve*..3]-> ()\nRETURN *",
    "MATCH (n:disease{name:\"根尖脓肿\"}) return n.disease.cure_lasttime",
    "GO FROM \"糖尿病\" OVER recommend_drug YIELD dst(edge);",
    "MATCH (n:disease{name:\"根尖脓肿\"}) return n.disease.easy_get",
    "MATCH (v:player {name: \"DeAndre Jordan\"}) RETURN v",
    "MATCH (n:character{name:'布拉德利'})-[e:learn_from]-(n1:college) return n1",
    "MATCH (v:player{name: \"abc\"}) -[:serve*..3]-> ()\nRETURN *",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v2) == 'Tim Duncan'\nRETURN COUNT(*)",
    "match (v:player) where id(v)==\"Carmelo Anthony\" return properties(v).age;",
    "LOOKUP ON character WHERE character.name=='坎坦克卢斯·诺特' YIELD properties(vertex).blood AS blood",
    "MATCH (n:disease{name:\"细菌性阴道病\"}) return n.disease.easy_get",
    "GO FROM \"Steve Nash\" OVER like REVERSELY YIELD like._dst",
    "FETCH PROP ON player \"Tony Parker\" YIELD player.name, player.age",
    "GO FROM \"Tim Duncan\" OVER like LIMIT 1;",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan'\n  WHERE like.likeness > 95 AND like.likeness < 100\n  YIELD vertices as nodes, edges as relationships",
    "LOOKUP ON like WHERE like.grade == 666 YIELD src(edge) as src, dst(edge) as dst",
    "match (player)-[s:serve]->(team) where s.start_year == 2001 return player.player.name AS player, team.team.name AS team",
    "GO FROM \"Carmelo Anthony\" OVER like YIELD like._dst| YIELD COUNT(*)",
    "FETCH PROP ON player \"Boris Diaw\", \"Tony Parker\" YIELD DISTINCT player.name, player.age",
    "MATCH (n:character{name:'克丽奥娜'}) return n.character.born",
    "MATCH (v:player {name: \"DeAndre Jordan\"}) RETURN v",
    "GO FROM \"脐疝\" OVER cure_department YIELD dst(edge);",
    "LOOKUP ON player WHERE player.age == 30 YIELD player.name, player.age + 1",
    "GO FROM 'Russell Westbrook' OVER serve, like YIELD serve._dst, like._dst",
    "MATCH (n:disease{name:\"血红蛋白E病\"}) return n.disease.easy_get",
    "GO 0 TO 2 STEPS FROM 'Tony Parker' OVER like BIDIRECT YIELD DISTINCT like._dst",
    "match p= (v:player)-[e:like*1..2]->(d) where v.player.age > 20 return e",
    "MATCH (v)-[:serve]->(t)\nWHERE (NOT NOT id(v) == 'Paul Gasol') AND id(v) == 'Paul Gasol'\nRETURN v.player.name AS Name, t.team.name AS Team",
    "MATCH (n:disease)-[e:recommend_eat]->(n1:food) WHERE n.disease.name=='高血压' return n1.food.name",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "GO FROM \"戊型病毒性肝炎\" OVER need_check YIELD dst(edge);",
    "MATCH (v:player{name:\"Giannis Antetokounmpo\"}) RETURN v.name AS vname",
    "MATCH (n:character{name:'奥拉·奎尔克'})-[e:learn_from]-(n1:college) return n1.college.name",
    "MATCH (v:player) WHERE [t in [v] | (v)-[:like]->(t)] RETURN v.player.name AS name",
    "GET SUBGRAPH 2 STEPS FROM \"卢卡斯·皮奎利\" YIELD VERTICES AS nodes, EDGES AS relationships;",
    "MATCH (n:disease)-[]->(n1:cure{name:'手术治疗'}) return count(n)",
    "LOOKUP ON disease WHERE disease.name == \"戊型病毒性肝炎\" YIELD properties(vertex).get_prob",
    "MATCH (v:player)-[e:like]->(v2)\nWHERE id(v) == \"Tim Duncan\"\nRETURN DISTINCT properties(e) as props, e",
    "MATCH (n:character{name:'塞德瑞拉·布莱克'})-[e]-(n1) WHERE e.rel_type=='姐姐' return n1",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:like{likeness: 90}]->(v)\nRETURN e, v",
    "MATCH (n:disease{name:\"老年人支气管扩张\"}) return n.disease.symptom",
    "match (player)-[s:serve]->(team) where s.start_year == 2001 return player.player.name AS player, team.team.name AS team",
    "GO 2 STEPS FROM 'Kobe Bryant' OVER like REVERSELY YIELD $$.player.name",
    "MATCH p = (v:player{name: \"Cory Joseph\"})-[e:like]-(v2)\nRETURN p",
    "FIND NOLOOP PATH FROM \"Tim Duncan\" TO \"Tony Parker\" OVER like REVERSELY UPTO 3 STEPS YIELD path as p",
    "LOOKUP ON disease WHERE disease.name == \"高血压\" YIELD properties(vertex).get_prob",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v3) == 'Spurs' AND id(v1) == 'Tony Parker'\nRETURN v1, v2, v3",
    "FIND SHORTEST PATH FROM \"赫尔曼·温廷汉姆\" TO \"卢克丽霞·布莱克\" OVER * YIELD path AS p",
    "FETCH PROP ON like \"Tony Parker\"->\"Tim Duncan\", \"Grant Hill\" -> \"Tracy McGrady\" YIELD edge as relationship |\nYIELD properties($-.relationship)",
    "match (v:player) return v.player.name, v",
    "MATCH(n:player)-[:like]->(m)\n  WHERE n.player.age > 35\n  RETURN DISTINCT id(n) AS id,\n                  count(n) AS count,\n                  sum(floor(n.player.age)) AS sum,\n                  max(m.player.age) AS max,\n                  min(n.player.age) AS min,\n                  avg(distinct n.player.age)+1 AS age,\n                  labels(m) AS lb\n        ORDER BY id, count, max, min\n        SKIP 10 LIMIT 20;",
    "MATCH (:player{name: \"Tim Duncan\"})-[e1:like]->()-[e2:serve*0..3]->()<-[e3:serve]-(v)\nRETURN count(v)",
    "MATCH (n:character{name:'贝内迪塔·多拉多'})-[e:belong_to]-(n1:college) return n1.character.name",
    "GO FROM \"霍奇金病\" OVER recommend_drug YIELD dst(edge);",
    "MATCH p = allShortestPaths( (a:player)-[e:serve*..3]-(b:team) )\n  WHERE a.player.name == 'Tim Duncan' AND b.team.name == 'Spurs'\n  RETURN p",
    "MATCH (n:character{name:'尼古拉·韦尔斯'}) return n.character.species",
    "$var = GO FROM \"Tracy McGrady\" OVER like YIELD like._dst as id; GO FROM $var.id OVER like YIELD like._dst",
    "MATCH (n:character)-[e:kindred{rel_type:'女儿'}]-(n1) WHERE n.character.name=='芙蓉·德拉库尔' return n1",
    "MATCH (:player{name: \"Tim Duncan\"})-[e:like*2..3]->(v)\nRETURN e, v",
    "MATCH (v:player)-[e:like]->(v2)\nWHERE id(v) == \"Tim Duncan\"\nRETURN DISTINCT properties(e) as props, e",
    "MATCH (n:character{name:'弗雷德·韦斯莱'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (v:player{name:\"Giannis Antetokounmpo\"}) RETURN v.name AS vname",
    "MATCH (n:disease{name:\"餐后血糖过低症\"}) return n.disease.cure_lasttime",
    "FETCH PROP ON player \"Jason Kidd\" YIELD player.name, player.age",
    "MATCH (v:player) WHERE [t in [v] | (v)-[:like]->(t)] RETURN v.player.name AS name",
    "MATCH (v:player {name: \"Rudy Gay\"})-[:serve*0..1]->(n) RETURN n.player.name",
    "GO 2 STEPS FROM \"雷古勒斯·布莱克\" OVER kindred YIELD dst(edge)",
    "MATCH (n:character)-[e:kindred{rel_type:'前妻'}]-(n1) WHERE n.character.name=='塞蒂娜·沃贝克的第二任丈夫' return n1",
    "GO 2 STEPS FROM \"乔治·韦斯莱\" OVER kindred YIELD dst(edge)",
    "MATCH (v:player{name: 'Rudy Gay'})-[e]->() RETURN type(e), count(*)",
    "match (v:player)-[e:like{likeness:-1}]->()  RETURN e",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE like.likeness > 90\nYIELD like.likeness, teammate.start_year, $$.player.name",
    "MATCH p2=(:player{name:\"Tim Duncan\"})-[e:like*1..2]-(:player{name:\"Tim Duncan\"})\nRETURN e.likeness AS e1",
    "MATCH (n:character)-[e:kindred{rel_type:'丈夫'}]-(n1) WHERE n.character.name=='冈希尔达·尼恩' return n1",
    "MATCH (a:player)\nWHERE id(a)=='Tim Duncan'\nMATCH (a)-[:like]-(b)\nRETURN count(*) AS cnt",
    "MATCH (:player{name: \"Tim Duncan\"})-[e:like*2..3]->(v)\nRETURN e, v",
    "go 1 to 4 steps from \"Tim Duncan\" over like yield like.likeness, edge as e",
    "LOOKUP ON player WHERE player.age > 30.5 YIELD id(vertex) as name, player.age AS Age",
    "MATCH (v:player{name:\"Giannis Antetokounmpo\"}) RETURN v.name AS vname",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE like.likeness > 90\nYIELD like.likeness, teammate.start_year, $$.player.name",
    "MATCH(n:player)-[:like]->(m)\n  WHERE n.player.age > 35\n  RETURN DISTINCT id(n) AS id,\n                  count(n) AS count,\n                  sum(floor(n.player.age)) AS sum,\n                  max(m.player.age) AS max,\n                  min(n.player.age) AS min,\n                  avg(distinct n.player.age)+1 AS age,\n                  labels(m) AS lb\n        ORDER BY id, count, max, min\n        SKIP 10 LIMIT 20;",
    "GO FROM \"Tracy McGrady\" OVER like YIELD like._dst",
    "GO FROM 'Russell Westbrook' OVER serve, like YIELD serve._dst, like._dst",
    "GO 1 STEPS FROM 'Tim Duncan' OVER like YIELD like._dst as id | GO FROM $-.id OVER serve YIELD serve._dst",
    "MATCH (n:character{name:'上巴恩顿的汉吉斯'}) return n.character.species",
    "GO 2 STEPS FROM 'Kobe Bryant' OVER like REVERSELY YIELD $$.player.name",
    "FETCH PROP ON player 'Tony Parker' YIELD player.name as Name |\nGO FROM $-.Name OVER like YIELD like._dst",
    "GO FROM \"Paul Gasol\" OVER * YIELD like._dst, serve._dst, teammate._dst",
    "LOOKUP ON character WHERE character.name=='宾利' YIELD properties(vertex).marital AS marital",
    "go 1 to 4 steps from \"Tim Duncan\" over like yield like.likeness, edge as e",
    "YIELD \"Yao Ming\" AS src, \"Tony Parker\" AS dst\n| FIND SHORTEST PATH FROM $-.src TO $-.dst OVER like, serve UPTO 5 STEPS YIELD path as p",
    "MATCH (n:character{name:'哈维·瑞吉比特'}) return n.character.eye",
    "MATCH (n:player) WHERE id(n) == \"Boris Diaw\" RETURN n;",
    "MATCH (n:character{name:'塞德瑞拉·布莱克'})-[e]-(n1) WHERE e.rel_type=='儿子' return n1",
    "MATCH (n:character{name:'哈桑·穆斯塔发'})-[e:belong_to]-(n1:group) return n1",
    "GO FROM 'Tim Duncan' OVER serve, like bidirect YIELD distinct dst(edge) as dst",
    "MATCH (n:character{name:'博尔'})-[e]-(n1) return n LIMIT 3",
    "MATCH (v:player) WITH (v)-[:teammate]->() AS p RETURN p",
    "GO FROM 'Tim Duncan' OVER like WHERE properties($$).age > 38 YIELD edge as e,  $$ as dst",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "MATCH (v:player{name: \"Damian Lillard\"})-[:like]-(v2)--(v3)\nWITH v3, v3.player.age AS age\nRETURN v3, age ORDER BY age LIMIT 3",
    "MATCH (v:player)-[e:like]->(v2)\nWHERE id(v) == \"Tim Duncan\"\nRETURN DISTINCT properties(e) as props, e",
    "MATCH (n:character{name:'弗拉德·德拉库'})-[e]-(n1) WHERE e.rel_type=='儿子' return n1",
    "FETCH PROP ON player 'Tony Parker' YIELD player.name as Name |\nGO FROM $-.Name OVER like YIELD like._dst",
    "GO FROM 'Boris Diaw' OVER serve WHERE $$.team.name CONTAINS \"Haw\"\nYIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "MATCH (n:disease)-[e:recommend_eat]->(n1:food) WHERE n.disease.name=='高血压' return n1.food.name",
    "MATCH (n:disease)-[]->(n1:cure{name:'药物治疗'}) return count(n)",
    "MATCH (v:player{name: 'Tim Duncan'})-[e]->() RETURN type(e), count(*)",
    "GO FROM \"LaMarcus Aldridge\" OVER * YIELD $$.team.name, $$.player.name",
    "match (v:player) return properties(v).name AS name order by name limit 2;",
    "MATCH (n:character{name:'罗恩·韦斯莱'})-[e:learn_from]-(n1:college) return n1",
    "MATCH (v1) -[:like]-> (v)\nWHERE id(v1) == 'Dejounte Murray'\nRETURN v.player.name AS Name, v.player.age AS Age\nORDER BY Age DESC, Name ASC\nSKIP 11\nLIMIT 3",
    "GO FROM \"高血压\" OVER cure_department YIELD dst(edge);",
    "MATCH (n:character{name:'蒂莉·托克'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (v1) -[:like]-> (v)\nWHERE id(v1) == 'Dejounte Murray'\nRETURN v.player.name AS Name, v.player.age AS Age\nORDER BY Age DESC, Name ASC\nSKIP 11\nLIMIT 3",
    "MATCH (:player{name:\"Kyrie Irving\"})-[e:serve|like*2..3]-(v)\nRETURN count(v)",
    "GET SUBGRAPH 1 STEPS FROM \"高血压\" YIELD VERTICES AS nodes, EDGES AS all_edges",
    "match (player)-[s:serve]->(team) where s.start_year == 2001 return player.player.name AS player, team.team.name AS team",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:like{likeness: 90}]->(v)\nRETURN e, v",
    "$a = GO FROM 'Danny Green' OVER like YIELD like._src AS src, like._dst AS dst;\nGO FROM $a.dst OVER teammate YIELD $a.src AS src, $a.dst, teammate._dst AS dst",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v2) == 'Tim Duncan'\nRETURN COUNT(*)",
    "LOOKUP ON disease WHERE disease.name == \"软纤维瘤\" YIELD properties(vertex).get_prob",
    "GET SUBGRAPH 2 STEPS FROM \"Tim Duncan\" BOTH like YIELD edges as e\n| UNWIND $-.e as a | YIELD $-.a AS a",
    "MATCH (a:player)\nWHERE id(a)=='Tim Duncan'\nMATCH (a)-[:like]-(b)\nRETURN count(*) AS cnt",
    "LOOKUP ON character WHERE character.name=='卢卡斯·皮奎利' YIELD properties(vertex).born AS born",
    "GO FROM \"Steve Nash\" OVER like REVERSELY YIELD like._dst",
    "MATCH (n:character{name:'伯莎·乔金斯'})-[e]-(n1) return n1",
    "MATCH (n:disease{name:\"遗传性耳瘘\"}) return n.disease.cured_prob",
    "MATCH (v:player {name: \"Rudy Gay\"})-[:serve*0..1]->(n) RETURN n.player.name",
    "MATCH (n:disease{name:\"眼颧部褐蓝痣\"}) return n.disease.cure_lasttime",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v3) == 'Spurs' AND id(v1) == 'Tony Parker'\nRETURN v1, v2, v3",
    "MATCH (n:disease{name:\"赤丝虬脉\"}) return n.disease.prevent",
    "MATCH (n:character{name:'若久耀西'})-[e:belong_to]-(n1:group) return n1",
    "MATCH (v:team{name:\"Spurs\"})--(v2)\nRETURN v2 AS Player",
    "GO FROM \"Manu Ginobili\" OVER * REVERSELY YIELD like.likeness, teammate.start_year, serve.start_year, $$.player.name",
    "MATCH (n:disease{name:\"特发性非硬化性门脉高压综合征\"}) return n.disease.get_prob",
    "GO FROM 'Tim Duncan' OVER serve, like bidirect YIELD distinct dst(edge) as dst",
    "MATCH (n:character{name:'罗恩·韦斯莱'}) return n.character.hair",
    "FETCH PROP ON player 'Boris Diaw' YIELD vertex as node",
    "LOOKUP ON disease WHERE disease.name == \"高血压\" YIELD properties(vertex).prevent",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v2) == 'Tim Duncan'\nRETURN COUNT(*)",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v3) == 'Spurs' AND id(v1) == 'Tony Parker'\nRETURN v1, v2, v3",
    "GO FROM \"Paul Gasol\" OVER * YIELD like._dst, serve._dst, teammate._dst",
    "GO FROM \"Manu Ginobili\" OVER like, teammate REVERSELY WHERE like.likeness > 90\nYIELD like.likeness, teammate.start_year, $$.player.name",
    "MATCH (:player{name: \"Tim Duncan\"})-[e:like*2..3]->(v)\nRETURN e, v",
    "MATCH (n:character{name:'西弗勒斯·斯内普'})-[e:belong_to]-(n1:group) return n1",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst |\nFIND SHORTEST PATH FROM $-.src TO $-.dst OVER like UPTO 5 STEPS YIELD path as p |\nORDER BY $-.p | LIMIT 10",
    "MATCH (n:disease{name:\"磨牙\"}) return n.disease.prevent",
    "MATCH (n:disease{name:\"蝶骨嵴脑膜瘤眼部病变\"}) return n.disease.symptom",
    "MATCH (v1)-[:like]->(v2:player)-[:serve]->(v3)\nWHERE id(v2) == 'Tim Duncan'\nRETURN COUNT(*)",
    "GO 1 TO 2 STEPS FROM 'Tony Parker' OVER like YIELD DISTINCT like._dst, like.likeness, $$.player.name",
    "MATCH (n:character{name:'伯莎·乔金斯'})-[e:belong_to]-(n1:group) return n1",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan'\n  WHERE like.likeness > 95 AND like.likeness < 100\n  YIELD vertices as nodes, edges as relationships",
    "MATCH (v:player)-[e:like]->(v2) WHERE none_direct_dst(e) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *\nMINUS\nMATCH (v:player)-[e:like]->(v2) WHERE id(v2) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *",
    "$var = GO FROM \"Tracy McGrady\" OVER like YIELD like._dst as id; GO FROM $var.id OVER like YIELD like._dst",
    "MATCH (v:team{name:\"Spurs\"})--(v2)\nRETURN v2 AS Player",
    "MATCH (v:player{name: 'Tim Duncan'}) return v.player.name AS name",
    "MATCH (n:character{name:'吉米·珀克斯'})-[e:belong_to]-(n1:group) return n1",
    "LOOKUP ON player WHERE player.age == 40 YIELD player.name, player.age + 1",
    "MATCH (n:character{name:'哈维·瑞吉比特'}) return n.character.eye",
    "MATCH (n:disease{name:\"肱骨内髁骨折\"}) return n.disease.easy_get",
    "MATCH (n:character{name:'鲍曼·赖特'}) return n.character.hair",
    "MATCH (v:player{name: \"Damian Lillard\"})-[:like]-(v2)--(v3)\nWITH v3, v3.player.age AS age\nRETURN v3, age ORDER BY age LIMIT 3",
    "MATCH (n:disease{name:\"三叉神经痛\"}) return n.disease.cause",
    "GO 3 STEPS FROM \"Tim Duncan\" OVER like,serve\n  WHERE size(labels($$))>0 AND $$.player.age>40\n  yield $$ as v",
    "MATCH (n:character{name:'赫尔伯特·斯普林'})-[e]-(n1) return n LIMIT 2",
    "GO FROM \"戊型病毒性肝炎\" OVER recommend_drug YIELD dst(edge);",
    "LOOKUP ON like WHERE like.grade == 666 YIELD src(edge) as src, dst(edge) as dst",
    "go 1 to 4 steps from \"Tim Duncan\" over like yield like.likeness, edge as e",
    "MATCH (n:disease{name:\"小儿中暑和暑热症\"}) return n.disease.easy_get",
    "GO FROM \"Boris Diaw\" OVER serve YIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan' IN like, serve YIELD vertices as nodes, edges as relationships",
    "match (v:player{age: 1+19}) RETURN v",
    "match (v:player{age: 1+19}) RETURN v",
    "MATCH (n:disease{name:\"急性肾功能不全\"}) return n.disease.symptom",
    "MATCH (v:player)-[e:like]->(v2) WHERE none_direct_dst(e) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *\nMINUS\nMATCH (v:player)-[e:like]->(v2) WHERE id(v2) IN [\"Tony Parker\", \"Tim Duncan\"] RETURN *",
    "MATCH (v:player) WHERE [t in [v] | (v)-[:like]->(t)] RETURN v.player.name AS name",
    "MATCH (n:disease{name:\"睾丸肿瘤\"}) return n.disease.symptom",
    "MATCH (:player{name:\"Tracy McGrady\"})-[e:serve|like{start_year: 2000}]->(v)\nRETURN e, v",
    "MATCH p2=(:player{name:\"Tim Duncan\"})-[e:like*1..2]-(:player{name:\"Tim Duncan\"})\nRETURN e.likeness AS e1",
    "FETCH PROP ON player 'Boris Diaw' YIELD vertex as node",
    "MATCH (n:disease{name:\"母儿ABO血型不合\"}) return n.disease.symptom",
    "MATCH p = (v:player{name: \"Cory Joseph\"})-[e:like]-(v2)\nRETURN p",
    "GET SUBGRAPH WITH PROP 2 STEPS FROM 'Tim Duncan' IN like, serve YIELD vertices as nodes, edges as relationships",
    "MATCH (v:team{name:\"Spurs\"})--(v2)\nRETURN v2 AS Player",
    "FETCH PROP ON disease \"戊型病毒性肝炎\" YIELD properties(vertex).cured_prob as prob",
    "FETCH PROP ON team \"Spurs\" YIELD team.name",
    "GO FROM \"LaMarcus Aldridge\" OVER * YIELD $$.team.name, $$.player.name",
    "MATCH (n:character{name:'雷古勒斯·布莱克'})-[e]-(n1:group) return count(n1)",
    "GO FROM \"Tony Parker\" OVER like REVERSELY YIELD like._dst",
    "MATCH(n:player)-[:like]->(m)\n  WHERE n.player.age > 35\n  RETURN DISTINCT id(n) AS id,\n                  count(n) AS count,\n                  sum(floor(n.player.age)) AS sum,\n                  max(m.player.age) AS max,\n                  min(n.player.age) AS min,\n                  avg(distinct n.player.age)+1 AS age,\n                  labels(m) AS lb\n        ORDER BY id, count, max, min\n        SKIP 10 LIMIT 20;",
    "MATCH (v1) -[:like]-> (v)\nWHERE id(v1) == 'Dejounte Murray'\nRETURN v.player.name AS Name, v.player.age AS Age\nORDER BY Age DESC, Name ASC\nSKIP 11\nLIMIT 3",
    "FETCH PROP ON like \"Tony Parker\"->\"Tim Duncan\", \"Grant Hill\" -> \"Tracy McGrady\" YIELD edge as relationship |\nYIELD properties($-.relationship)"
]