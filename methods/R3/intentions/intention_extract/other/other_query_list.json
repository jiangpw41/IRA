[
    "LOOKUP ON student WHERE student.teacher == \"a\" YIELD id(vertex) as id",
    "show spaces",
    "MATCH (v:ttl_expire_tag03) RETURN v LIMIT 10;",
    "CREATE EDGE IF NOT EXISTS serve(start_year int, end_year int)",
    "YIELD [n IN range(1, 5) WHERE n > 2 | n + 10] AS a",
    "SHOW COLLATION",
    "CREATE EDGE IF NOT EXISTS e1(p1 int)",
    "ALTER TAG t1 TTL_DURATION = 2, TTL_COL = \"p2\"",
    "ALTER TAG ttl_tag06 drop (b);",
    "RETURN \"Yao Ming\" + -30.142857142857142",
    "ALTER TAG person_ttl ttl_duration = 100, ttl_col = \"gender\"",
    "SUBMIT JOB INGEST",
    "SHOW CREATE tag test_comment_tag;",
    "LOOKUP ON student WHERE student.alias == \"abc\" YIELD id(vertex) as id",
    "DESCRIBE SPACE basketballplayer",
    "RETURN list[1, 2, 3, 4, 5] [3..1] AS a",
    "YIELD\nCASE 2+3\nWHEN 4 THEN 0\nWHEN 5 THEN 1\nELSE -1\nEND\nAS result",
    "RETURN range(1,5)[3..] AS a",
    "PROFILE format=\"row\" SHOW TAGS",
    "SHOW PARTS 1",
    "RETURN datetime().hour",
    "RETURN upper(\"Basketball_Player\")",
    "SUBMIT JOB FLUSH;",
    "WITH 4 AS one, 3 AS two RETURN one > two AS result",
    "USE <your_graph_space>",
    "CREATE TAG IF NOT EXISTS only_linestring(geo geography(linestring))",
    "DESC edge test_comment_edge;",
    "WITH [NULL, 1, 1, 2, 2] As a\nUNWIND a AS b\nRETURN count(b), COUNT(*), couNT(DISTINCT b)",
    "SHOW CREATE TAG woman;",
    "ALTER edge edge_1_ttl ttl_duration = 100, ttl_col = \"degree\"",
    "RETURN datetime(timestamp(1625469277))",
    "CREATE SPACE IF NOT EXISTS my_space (vid_type=FIXED_STRING(30))",
    "RETURN cbrt(NULL) AS value1, exp(NULL) AS value4, exp2(NULL) AS value5",
    "RETURN DATE(\"23333\")",
    "RETURN acos(0.5)",
    "CREATE TAG TAG(name string)",
    "RETURN \"a\" IN MAP{a:1, b:2} AS a",
    "CREATE TAG INDEX idx_B_9 on B(id, nickName, namex(1), createDate);",
    "SHOW PARTS",
    "RETURN time(\"02:59:40\").minute AS minute",
    "FETCH PROP ON tag_date \"test\" YIELD tag_date.f_date, tag_date.f_time, tag_date.f_datetime;",
    "YIELD 1 AS id, 2 AS id",
    "ALTER TAG t1 COMMENT ='test1'",
    "CREATE TAG IF NOT EXISTS test1(p1 string, p2 int)",
    "RETURN 1 + 1 == 2",
    "RETURN timestamp(\"2022-01-05T06:18:43\")",
    "SHOW ROLES in basketballplayer",
    "RETURN'apple'ENDS WITH'app','apple'ENDS WITH'e','apple'ENDS WITH'E','apple'ENDS WITH'b'",
    "CREATE TAG INDEX student_alias ON student(alias(10))",
    "UPDATE VERTEX ON student \"Alen\" SET teacher = \"Bob\"",
    "LOOKUP ON id_edge WHERE id_edge.id == 100 YIELD src(edge) as src, dst(edge) as dst, rank(edge) as rank",
    "CREATE TAG IF NOT EXISTS test(p1 string, p2 int)",
    "YIELD list[1, 2, 3][0..-1] AS a",
    "CREATE TAG INDEX student_ta ON student(alias(10), teacher(10))",
    "CREATE TAG INDEX IF NOT EXISTS any_shape_geo_index ON any_shape(geo)",
    "RETURN 1+1, rand32(1, 5)",
    "CREATE EDGE IF NOT EXISTS follow(degree int)",
    "WITH [NULL, 1, 1, 2, 2] As a UNWIND a AS b\nRETURN count(b), count(*), count(DISTINCT b)",
    "match ()-[e]->()\nwhere rank(e) == 0\nRETURN rank(e)\nlimit 3",
    "UNWIND [true, false,'true','false', NULL] AS b\nRETURN toBoolean(b) AS b",
    "YIELD hash(\"Tim\") % 100",
    "CREATE TAG ttl_tag01(a int, b int) ttl_duration=5, ttl_col=\"a\";",
    "DESCRIBE EDGE INDEX multi_edge_1_index",
    "SUBMIT JOB COMPACT;",
    "SHOW EDGE INDEX STATUS",
    "INSERT VERTEX ttl_expire_tag02(a,b) VALUES \"t-e-t-02\":(timestamp(),10);",
    "YIELD list[1, 2, 3, 4, 5][-3..-1] AS a",
    "ALTER EDGE edge_1_ttl  ttl_col = \"\"",
    "DROP TAG ddl_tag;\nDROP EDGE ddl_edge;",
    "RETURN rtrim(\" basketball player \")",
    "CREATE TAG player(name string, age int)",
    "RETURN 1- -1 AS sub",
    "ALTER TAG tag_1 ADD (col5 int)",
    "RETURN rand()",
    "CREATE TAG IF NOT EXISTS no_property()",
    "USE test",
    "WITH list[1, 2, 3, 4, 5] AS a\nRETURN a[..3] AS r",
    "REMOVE LISTENER SYNC",
    "RETURN list[1, 2, 3, 4, 5] [0..10] AS a",
    "DROP TAG INDEX person_ttl_2_index_number",
    "USE space1",
    "CREATE TAG IF NOT EXISTS player(name string, age int)",
    "CREATE TAG IF NOT EXISTS player_with_default(name string, age int DEFAULT 20)",
    "SUBMIT JOB COMPACT",
    "SHOW EDGE INDEXES",
    "CREATE TAG IF NOT EXISTS test2(p3 string, p4 int)",
    "DROP EDGE INDEX edge_1_ttl_index_2_start_time",
    "RETURN min(NULL) AS value1, std(NULL) AS value2, sum(NULL) AS value3, bit_and(NULL) AS value4, bit_or(NULL,NULL) AS value5",
    "SHOW CREATE TAG man;",
    "UNWIND [1,2,3] AS n RETURN n",
    "Show TAG INDEXES;",
    "SIGN IN DRAINER SERVICE(192.168.10.106:9889)",
    "MATCH ()-[e:ttl_m_edge1]->() return e limit 10;",
    "DROP TAG INDEX player_name_index",
    "YIELD hash(123.0)",
    "CREATE TAG INDEX IF NOT EXISTS player_index_1 ON player(name(20))",
    "SHOW TAG INDEX STATUS;",
    "CREATE TAG IF NOT EXISTS only_polygon(geo geography(polygon))",
    "DROP EDGE INDEX edge_1_ttl_index_second_degree",
    "LOOKUP ON student WHERE student.alias < \"b\" and student.teacher < \"abc\" YIELD DISTINCT id(vertex) as id, student.teacher, student.alias",
    "CREATE TAG IF NOT EXISTS t2 (p2 STRING)",
    "CREATE TAG IF NOT EXISTS player(name string NOT NULL, age int)",
    "FETCH PROP ON student \"Amber\" YIELD student.grade, student.number",
    "DROP TAG test",
    "DROP EDGE INDEX edge_1_ttl_index_2_degree",
    "RETURN ltrim(\" basketball player \")",
    "DROP EDGE INDEX edge_index_status",
    "ALTER TAG student ADD (alias string default \"abc\")",
    "USE space2",
    "UNWIND [1,2,3] AS a RETURN a\nMINUS\nWITH 4 AS a\nRETURN a",
    "SHOW JOBS;",
    "DROP TAG INDEX multi_tag_index;",
    "YIELD \"Tony No.1\" =~ \"\\\\w+No\\\\.\\\\d+\" AS r",
    "SUBMIT JOB BALANCE DATA",
    "WITH date({year: 1984, month: 10, day: 11}) AS x RETURN x + 1",
    "CREATE TAG `TAG` (name string)",
    "RETURN rand32(1,100)",
    "YIELD 1- -1",
    "CREATE USER IF NOT EXISTS clear_space_user WITH PASSWORD 'nebula';",
    "SUBMIT JOB DOWNLOAD HDFS \"hdfs://*.*.*.*:9000/sst",
    "UNWIND [1,2,3,3] AS d RETURN sum(distinct d) AS sum",
    "DESCRIBE TAG player",
    "YIELD rand32(1, 6)",
    "match p = (v:Label_0)\nreturn count(p)",
    "RETURN lower(\"Basketball_Player\")",
    "ALTER TAG t1 ADD (p3 int32, p4 fixed_string(10))",
    "SIGN OUT DRAINER SERVICE",
    "RETURN range(1,5)[-2]",
    "CREATE TAG INDEX IF NOT EXISTS team_index ON team(name(20))",
    "submit job stats;",
    "CREATE EDGE INDEX edge_1_ttl_index_second_degree ON edge_1_ttl(degree)",
    "BALANCE DATA",
    "CREATE SPACE basketballplayer(partition_num=15, replica_factor=1, vid_type=fixed_string(30))",
    "SHOW QUERIES",
    "use MY_SPACE",
    "YIELD COUNT(CASE WHEN null THEN null ELSE 1 END) AS nulls",
    "LOOKUP ON student WHERE student.teacher > \"a\" YIELD id(vertex) as id",
    "RETURN left(\"basketball_player\",6)",
    "RETURN \"384748.39\" =~ \"\\\\d+(\\\\.\\\\d{2})?\"",
    "RETURN [n IN range(1,5) WHERE n > 2 | n + 10] AS a",
    "create tag person(name string);\ncreate tag index p1 on person(name(3));",
    "SHOW EDGE INDEX STATUS;",
    "CREATE EDGE follow(degree int)",
    "YIELD [1, 2, 3][0..1]",
    "CREATE TAG IF NOT EXISTS person(p1 int)",
    "INSERT EDGE\n  edge_1(col1, col2, col3, col4)\nVALUES\n  \"Tim\"  -> \"May\":  (\"Good\", 18, 11.11, `timestamp`(\"2000-10-10T10:00:00\")),\n  \"Tim\"  -> \"Tony\": (\"Good\", 18, 11.11, `timestamp`(\"2000-10-10T10:00:00\")),\n  \"Tony\" -> \"May\":  (\"Like\", 18, 11.11, `timestamp`(\"2000-10-10T10:00:00\")),\n  \"May\"  -> \"Tim\":  (\"Like\", 18, 11.11, `timestamp`(\"2000-10-10T10:00:00\"))",
    "CREATE TAG IF NOT EXISTS only_point(geo geography(point))",
    "RETURN 1+1==2",
    "DROP EDGE INDEX edge_1_ttl_index_second_start_time",
    "RETURN 11+12",
    "SET VARIABLES read_only=true",
    "RETURN DISTINCT 1+1, '1+1', (int)3.14, (string)(1+1), (string)true",
    "ALTER TAG ttl_tag07 ttl_col=\"\";",
    "YIELD COUNT(*)+1 ,1+2 ,(INT)abs(count(2))",
    "ADD DRAINER 192.168.10.106:9889",
    "CREATE TAG INDEX IF NOT EXISTS any_shape_geo_index ON any_shape(geo) with (s2_max_level=30, s2_max_cells=8)",
    "RETURN last(LIST[]) AS a, head(LIST[]) AS b",
    "LOOKUP ON person WHERE person.name==\"abc\" YIELD person.name",
    "SUBMIT JOB DOWNLOAD HDFS \"hdfs://<hadoop_address>:<hadoop_port>/<sst_file_path>",
    "CREATE EDGE IF NOT EXISTS serve_with_default(start_year int, end_year int DEFAULT 2010)",
    "CREATE SPACE basketballplayer\n(partition_num = 10,\nreplica_factor = 1,\nvid_type = FIXED_STRING(30))",
    "SHOW TAGS",
    "RETURN tan(0.5)",
    "RETURN rand64(1,100)",
    "RETURN 1+1 AS sum",
    "CREATE TAG woman(name string, email string, age int, gender string, row_timestamp timestamp) ttl_duration = 0, ttl_col = \"row_timestamp\";",
    "SHOW JOB 25",
    "FETCH PROP ON person \"1\" YIELD person.age as age;",
    "SHOW JOB <job_id>",
    "ADD LISTENER SYNC META 192.168.10.105:9569 STORAGE 192.168.10.105:9789 TO SPACE basketballplayer",
    "DROP EDGE INDEX IF EXISTS not_exists_edge_index",
    "RETURN'apple'STARTS WITH'app','apple'STARTS WITH'a','apple'STARTS WITH toUpper('a')",
    "MATCH (v:team)\nRETURN id(v)",
    "ALTER EDGE work2 ttl_col = \"\";",
    "CREATE TAG team(name string)",
    "CREATE TAG IF NOT EXISTS team(name string)",
    "CREATE TAG INDEX idx_B_8 on B(nickName);",
    "MATCH (p:bachelor)-[:serve]->(t)\nRETURN t.team.name AS team",
    "WITH time({hour: 12, minute: 31, second: 14, millisecond:111, microsecond: 222}) AS d RETURN d",
    "CREATE TAG IF NOT EXISTS any_shape(geo geography)",
    "WITH [1, 2, 3] AS `list` RETURN 3 IN `list` AS r",
    "RETURN datetime(1625469277)",
    "RETURN {age: 32, name: \"Marco Belinelli\"}",
    "SHOW CREATE EDGE work2;",
    "RETURN list[1, 2, 3, 4, 5] [0..0] AS a",
    "CREATE TAG IF NOT EXISTS person(name string, age int);\nCREATE TAG IF NOT EXISTS personWithDefault(\n  name string DEFAULT \"\",\n  age int DEFAULT 18, isMarried bool DEFAULT false,\n  BMI double DEFAULT 18.5, department string DEFAULT \"engineering\",\n  birthday timestamp DEFAULT timestamp(\"2020-01-10T10:00:00\")\n);\nCREATE TAG IF NOT EXISTS student(grade string, number int);\nCREATE TAG IF NOT EXISTS studentWithDefault(grade string DEFAULT \"one\", number int);\nCREATE TAG IF NOT EXISTS employee(name int);\nCREATE TAG IF NOT EXISTS interest(name string);\nCREATE TAG IF NOT EXISTS school(name string, create_time timestamp);\nCREATE EDGE IF NOT EXISTS schoolmate(likeness int, nickname string);\nCREATE EDGE IF NOT EXISTS schoolmateWithDefault(likeness int DEFAULT 80);\nCREATE EDGE IF NOT EXISTS study(start_time timestamp, end_time timestamp);",
    "EXPLAIN format=\"dot\" SHOW TAGS",
    "SHOW CREATE TAG player",
    "CREATE TAG INDEX single_person_index2 ON tag_1(col5)",
    "DROP TAG INDEX IF EXISTS not_exists_tag_index",
    "DESC tag test_comment_tag;",
    "RETURN length(\"basketball\")",
    "FETCH PROP ON course \"English\" YIELD vertex as node",
    "SUBMIT JOB STATS;",
    "RETURN datetime(\"2021-07-19T02:59:40\").mInutE AS minute",
    "WITH [1,1,2,2,3,3] AS n\nUNWIND n AS r\nWITH DISTINCT r AS r\nORDER BY r\nRETURN collect(r)",
    "CREATE TAG IF NOT EXISTS t5(p1 fixed_string(5) NOT NULL, p2 int, p3 int DEFAULT NULL)",
    "REBUILD TAG INDEX any_shape_geo_index",
    "RETURN 1+1",
    "CREATE TAG IF NOT EXISTS t1(a string, b int)",
    "show stats;",
    "REBUILD TAG INDEX player_index_",
    "SHOW CHARSET",
    "RETURN 11 + 12",
    "DELETE TAG ttl_expire_tag03 FROM \"t-e-t-04\";",
    "ALTER TAG t1 ADD (p5 double NOT NULL DEFAULT 0.4 COMMENT'p5') COMMENT='test2'",
    "match p = (v)\nwhere id(v) == 1\nreturn count(*)",
    "LOOKUP ON student WHERE student.teacher < \"a\" YIELD id(vertex) as id",
    "SHOW HOSTS",
    "SHOW FULLTEXT INDEXES;",
    "LOOKUP ON student WHERE student.name < \"a\" YIELD id(vertex) as id, student.name as name, student.age as age",
    "RETURN timestamp()",
    "RETURN trim(\" basketball player \")",
    "RETURN DATE({year:-123, month:12, day:3})",
    "CREATE TAG man(name string, email string,  age int, gender string, row_timestamp timestamp) ttl_duration = 100, ttl_col = \"row_timestamp\";",
    "RETURN NOT FALSE OR FALSE AND FALSE XOR FALSE",
    "CREATE TAG INDEX index_ttl_tag03_c on ttl_tag03(c(10));",
    "INSERT VERTEX personWithDefault(name, age) VALUES \"Tom\":(\"Tom\", 20)",
    "RETURN toFloat(1), toFloat('1.3'), toFloat('1e3'), toFloat('not a number')",
    "RETURN atan(0.5)",
    "SHOW SPACES",
    "INSERT VERTEX ttl_tag06(a,b) VALUES \"10\":(now(),now());",
    "SHOW TAG INDEXES",
    "YIELD [1, 2, 3][2]",
    "RETURN datetime()",
    "RETURN list[1, 2, 3] AS a",
    "CREATE TAG IF NOT EXISTS t1 (p1 string, p2 int)",
    "$var = YIELD 1 AS f, 3 AS t",
    "RETURN hash(\"Boris\")",
    "CREATE TAG IF NOT EXISTS player(name string, age int NOT NULL DEFAULT 18)",
    "CREATE EDGE IF NOT EXISTS any_shape_edge(geo geography)",
    "RETURN'apple'STARTS WITH'b','apple'NOT STARTS WITH'app'",
    "CLEAR SPACE IF EXISTS clear_space2;",
    "CREATE EDGE INDEX edge_1_ttl_index_second_start_time ON edge_1_ttl(start_time)",
    "UNWIND [1,2] AS a RETURN a\nINTERSECT\nUNWIND [1,2,3,4] AS a\nRETURN a",
    "REMOVE DRAINER",
    "ALTER TAG t1 CHANGE (p3 int64, p4 string)",
    "RETURN range(1,5)[3]",
    "CREATE SPACE IF NOT EXISTS test (vid_type=FIXED_STRING(30))",
    "LOOKUP ON student WHERE student.number == 1 YIELD id(vertex) as name, student.age",
    "CREATE USER IF NOT EXISTS test_permission WITH PASSWORD 'test';\nGRANT ROLE USER ON nba TO test_permission;",
    "CREATE EDGE serve(start_year int, end_year int)",
    "RETURN range(1,5)[0..3]",
    "LOOKUP ON ttl_tag where ttl_tag.b==10 yield ttl_tag.a as a,ttl_tag.b as b;",
    "RETURN {k1 : 1, k2: true}.k1 AS k",
    "RETURN date(\"2021-07-19\").month AS month",
    "CREATE tag value(value int, values bool)",
    "INSERT VERTEX\n  student(age, alias, name, teacher)\nVALUES\n  \"Bob\" : (28, \"abc\", \"Bob\", \"Candy\")",
    "CREATE TAG IF NOT EXISTS woman(name string, age int,\nmarried bool, salary double, create_time timestamp)\nTTL_DURATION = 100, TTL_COL = \"create_time\"",
    "CREATE TAG INDEX student_teacher ON student(teacher(10))",
    "CREATE TAG ttl_tag06(a timestamp, b timestamp) ttl_duration=3,ttl_col=\"a\";",
    "KILL QUERY(SESSION=1625553545984255,PLAN=163)"
]