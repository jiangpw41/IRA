[
    "GO from 'Tim Duncan' OVER serve YIELD serve._src AS id |\nGET SUBGRAPH WITH PROP FROM $-.id\nYIELD vertices as nodes, edges as relationships",
    "$a = GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst;\nFIND ALL PATH FROM $a.src TO $a.dst OVER like UPTO 3 STEPS YIELD path as p |\nORDER BY $-.p | LIMIT 5",
    "$a = GO FROM \"Yao Ming\" over like YIELD like._dst AS src;\nFIND SHORTEST PATH FROM $a.src TO \"Tony Parker\" OVER like, serve UPTO 5 STEPS YIELD path as p",
    "$a = GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst;\nFIND NOLOOP PATH WITH PROP FROM $a.src TO $a.dst OVER like WHERE like.likeness > 90 UPTO 3 STEPS YIELD path as p |\nORDER BY $-.p | LIMIT 5",
    "LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id |\nFETCH PROP ON player $-.id YIELD player.name",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst |\nFIND ALL PATH FROM $-.src TO $-.dst OVER like UPTO 3 STEPS YIELD path as p",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst\n| FIND NOLOOP PATH FROM $-.src TO $-.dst OVER like UPTO 3 STEPS YIELD path as p",
    "GO FROM \"player100\" OVER follow\nYIELD dst(edge) AS ID\n| FETCH PROP ON player $-.ID\nYIELD properties(vertex).age AS Age\n| YIELD AVG($-.Age) as Avg_age, count(*)as Num_friends",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst\n| FIND SHORTEST PATH FROM $-.src TO $-.dst OVER like UPTO 5 STEPS YIELD path as p",
    "LOOKUP ON player\nWHERE player.name CONTAINS 'Tim'\nYIELD player.age as age, id(vertex) as vid |\nGO FROM $-.vid OVER like REVERSELY YIELD $-.age AS age, like._dst AS dst |\nYIELD\n  any(d IN COLLECT(DISTINCT $-.dst) WHERE d=='Tony Parker') AS d,\n  $-.age as age",
    "INSERT EDGE like(likeness) VALUES \"Tim Duncan\"->\"Tim Parker\":(99);\nINSERT EDGE like(likeness) VALUES \"Tim Parker\"->\"Tony Parker\":(90);",
    "$a = LOOKUP ON player WHERE player.age == 40 YIELD id(vertex) as id;\nFETCH PROP ON player $a.id YIELD player.name",
    "LOOKUP ON player WHERE player.age == 40 YIELD player.name AS name |\nGO 1 TO 2 STEPS FROM $-.name OVER like REVERSELY YIELD like._dst AS dst, $$.player.name AS name, edge as e, $$ as dstnode, $^ as srcnode",
    "GO FROM \"player101\" OVER follow\nYIELD src(edge) AS s, dst(edge) AS d\n| FETCH PROP ON follow $-.s -> $-.d\nYIELD properties(edge).degree",
    "$a = GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst;\nFIND NOLOOP PATH FROM $a.src TO $a.dst OVER like UPTO 3 STEPS YIELD path as p",
    "$a = GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst;\nFIND ALL PATH FROM $a.src TO $a.dst OVER like UPTO 3 STEPS YIELD path as p",
    "GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst |\nFIND SHORTEST PATH FROM $-.src TO $-.dst OVER like UPTO 5 STEPS YIELD path as p |\nORDER BY $-.p | LIMIT 10",
    "LOOKUP ON player\nWHERE player.name CONTAINS 'Tim'\nYIELD player.age AS age, id(vertex) AS vid |\nGO FROM $-.vid\nOVER like REVERSELY\nYIELD\n  $-.age AS age,\n  ('Tony Parker' == like._dst) AS liked,\n  like._src AS src,\n  like._dst AS dst",
    "$var = GO FROM 'Boris Diaw','Boris Diaw' OVER serve YIELD serve._src AS src, serve._dst AS dst;\nFETCH PROP ON serve $var.src->$var.dst YIELD DISTINCT serve.start_year, serve.end_year, edge as relationship",
    "$var = LOOKUP ON player\nWHERE player.name CONTAINS 'Tim'\nYIELD player.age AS age, id(vertex) AS vid;\nGO FROM $var.vid\nOVER like REVERSELY\nYIELD\n  $var.age AS age,\n  ('Tony Parker' == like._dst) AS liked,\n  like._src AS src,\n  like._dst AS dst",
    "$a = GO FROM \"Tim Duncan\" over * YIELD like._dst AS src, serve._src AS dst;\nFIND NOLOOP PATH FROM $a.src TO $a.dst OVER like UPTO 3 STEPS YIELD path as p |\nORDER BY $-.p | LIMIT 5",
    "FETCH PROP ON player 'Tony Parker' YIELD player.name as Name |\nGO FROM $-.Name OVER like YIELD like._dst"
]